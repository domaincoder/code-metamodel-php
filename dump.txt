Xnni\ConstructionBundle\Controller\Contract\ShowController
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\UseCase\Contract\Show

  - useCase 
      var Show

  # showAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl

Xnni\ConstructionBundle\Controller\Supplier\AddController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Form\Entity\Supplier
  use Xnni\ConstructionBundle\UseCase

  - useCase 

  # __construct() コンストラクタ
  # inputAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\Supplier\EditController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Supplier

  - useCase 

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\Supplier\ListUpController
  package
  Route
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController

  - useCase 

  # listUpAction() 
      Route TODO array impl
      Template TODO array impl

Xnni\ReflectionBundle\Controller\DefaultController
  use Symfony\Bundle\FrameworkBundle\Controller\Controller
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template


  # indexAction() 
      Route TODO array impl
      Template TODO array impl

Xnni\ConstructionBundle\Controller\Supplier\DeleteController
  package
  Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Supplier

  - useCase 

  # deleteAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl

Xnni\ConstructionBundle\Controller\SecurityController
  package
  use Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfProviderInterface
  use Symfony\Component\HttpFoundation\Request
  use Symfony\Component\HttpFoundation\Session
  use Symfony\Component\Security\Core\SecurityContextInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Translation\TranslatorInterface

  - translator 
      var TranslatorInterface
  - request 
      var Request
  - session 
      var Session\Session
  - csrfProvider 
      var CsrfProviderInterface

  # loginAction() 
      Template TODO array impl

Xnni\BackendBundle\Form\Entity\ContractStart
  ServiceCallback
  Assert\Callback
  use Symfony\Component\Validator\Constraints
  use PHPMentors\ValidatorBundle\Validator\Constraints\ServiceCallback
  use Symfony\Component\Validator\ExecutionContextInterface

  - companyName 
      Assert\NotBlank TODO array impl
  - comment 
  - directoryName 
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
      Assert\Regex TODO array impl
  - startDate 
      Assert\NotBlank TODO array impl
  - adminUsername 
      Assert\NotBlank TODO array impl
  - adminPassword 
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
  - normalUsername 
      Assert\NotBlank TODO array impl
  - normalPassword 
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
  - ricohCustomer 
  - accountMax 
  - paymentType 

  # setAdminPassword() 
      param TODO array impl
  # getAdminPassword() 
      return TODO array impl
  # setAdminUsername() 
      param TODO array impl
  # getAdminUsername() 
      return TODO array impl
  # setComment() 
      param TODO array impl
  # getComment() 
      return TODO array impl
  # setCompanyName() 
      param TODO array impl
  # getCompanyName() 
      return TODO array impl
  # setDirectoryName() 
      param TODO array impl
  # getDirectoryName() 
      return TODO array impl
  # setNormalPassword() 
      param TODO array impl
  # getNormalPassword() 
      return TODO array impl
  # setNormalUsername() 
      param TODO array impl
  # getNormalUsername() 
      return TODO array impl
  # setStartDate() 
      param TODO array impl
  # getStartDate() 
      return TODO array impl
  # setRicohCustomer() 
      param TODO array impl
  # getRicohCustomer() 
      return TODO array impl
  # setAccountMax() 
      param TODO array impl
  # getAccountMax() 
      return TODO array impl
  # setPaymentType() 
      param TODO array impl
  # getPaymentType() 
      return TODO array impl
  # validateUsernames() 
      param TODO array impl
  # validatePasswords() パスワードの検証（ログインユーザー名がある場合は必須）

Xnni\ConstructionBundle\Domain\Data\LoginUser
  ORM\Entity
  ORM\Table
  ORM\InheritanceType
  ORM\DiscriminatorColumn
  ORM\DiscriminatorMap
  use Doctrine\ORM\Mapping
  use Symfony\Component\Security\Core\Role\Role
  use Symfony\Component\Security\Core\User\UserInterface
  use Symfony\Component\Validator\Constraints
  use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - Contract 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - displayName 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - password 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - username 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - salt 

  # __construct() 
      param TODO array impl
  # getId() 
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getDisplayName() 
      return TODO array impl
  # setDisplayName() 
      param TODO array impl
      return TODO array impl
  # getPassword() 
      return TODO array impl
  # setPassword() 
      param TODO array impl
      return TODO array impl
  # getUsername() 
      return TODO array impl
  # setUsername() 
      param TODO array impl
      return TODO array impl
  # getContract() 
      return TODO array impl
  # setContract() 
      param TODO array impl
      return TODO array impl
  # getTypeName() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ
  # getRoles() ロールを取得する
  # getSalt() パスワードハッシュ用saltを取得する
  # eraseCredentials() クレデンシャルを消去する
  # getAuthorities() 
      return TODO array impl
  # getAuthorityCodes() 
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\BackendBundle\Form\Type\ContractType
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Domain\Data\Contract

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\BackendBundle\Form\Type\LoginUserType
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\LoginUser


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Contract\Show
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\UseCase\UseCase

  - applicationContext 
      var ApplicationContext

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Supplier\Add
  DI\Service
  package
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\SupplierFactory
  use Xnni\ConstructionBundle\Domain\Data\Supplier
  use Xnni\ConstructionBundle\Form\Entity\Supplier
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - domainFactoryObject 
      var \Closure
  - supplierFactory 
      var SupplierFactory
  - applicationContext 
      var ApplicationContext

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Supplier\Edit
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Domain\Data\Supplier
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Supplier\ListUp
  DI\Service
  package
  use Doctrine\ORM\Query
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\SupplierSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\SupplierRepository
  use Xnni\ConstructionBundle\UseCase\UseCase

  - domainRepositoryObject 
      var SupplierRepository

  # __construct() コンストラクタ
  # prepare() 
      param TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Supplier\Delete
  DI\Service
  package
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\SupplierRepository
  use Xnni\ConstructionBundle\UseCase\UseCase

  - domainRepositoryObject 
      var SupplierRepository
  - entityManager 
      var EntityManager

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\BackendBundle\XnniBackendBundle
  use Symfony\Component\HttpKernel\Bundle\Bundle


  # boot() 

Xnni\ConstructionBundle\Controller\Purchase\AddMultiController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\UnfinishedConstructionSite
  use Xnni\ConstructionBundle\Form\Entity\PurchaseList
  use Xnni\ConstructionBundle\Form\Type\ConstructionSiteType
  use Xnni\ConstructionBundle\Form\Type\PurchaseListType
  use Xnni\ConstructionBundle\UseCase

  - useCase 
      var UseCase\Purchase\AddMulti
  - constructionSiteRepository 
      var ConstructionSiteRepository
  - unfinishedConstructionSiteSpecification 
      var UnfinishedConstructionSite
  - primeContractorRepository 
      var PrimeContractorRepository

  # __construct() コンストラクタ
  # inputAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # rowAction() 
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl
  # createPrimeContractorForm() 
      param TODO array impl
      return TODO array impl

Xnni\BillBundle\Controller\EditMultiController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\UseCase
  use Xnni\MultiEditBundle\Controller\MultiEditController

  - useCase 

  # __construct() constructor
  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\BillBundle\Controller\PdfController
  Route
  use Symfony\Component\HttpFoundation\Response
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\BillBundle\Report\BillPDF
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Controller\UseCaseController

  - useCase 
      var \Xnni\BillBundle\UseCase\Bill\EditMulti

  # pdfAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl

Xnni\ReflectionBundle\DependencyInjection\Configuration
  use Symfony\Component\Config\Definition\Builder\TreeBuilder
  use Symfony\Component\Config\Definition\ConfigurationInterface


  # getConfigTreeBuilder() {@inheritDoc}

Xnni\BillBundle\DependencyInjection\XnniBillExtension
  use Symfony\Component\DependencyInjection\ContainerBuilder
  use Symfony\Component\Config\FileLocator
  use Symfony\Component\HttpKernel\DependencyInjection\Extension
  use Symfony\Component\DependencyInjection\Loader


  # load() {@inheritDoc}

Xnni\BillBundle\Domain\Data\Bill
  ORM\Table
  ORM\Entity
  ORM\HasLifecycleCallbacks
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Money
  use Xnni\ConstructionBundle\Domain\Data\Tax

  - id 
      var integer
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - BillDetails 
      ORM\OneToMany TODO array impl
      Assert\Valid TODO array impl
      Assert\Count TODO array impl
  - Receipts 
      ORM\OneToMany TODO array impl
      Assert\Valid TODO array impl
  - targetDate 
      var \DateTime
  - name 
      var string
  - code 
      var string
  - comment 
      var string
  - taxRate 
      var int
  - taxAmount 
      var int
  - adjustmentAmount 
      var int
  - status 
      var string
  - total 
      var int
  - type 
      var string
  - createdAt 
      var \DateTime
  - updatedAt 
      var \DateTime

  # __construct() 
  # getId() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
      return TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setCode() 
      param TODO array impl
      return TODO array impl
  # getCode() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setBillDetails() 
      param TODO array impl
  # getBillDetails() 
      return TODO array impl
  # addBillDetail() 
      param TODO array impl
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # setComment() 
      param TODO array impl
  # getComment() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setReceipts() 
      param TODO array impl
  # getReceipts() 
      return TODO array impl
  # setAdjustmentAmount() 
      param TODO array impl
  # getAdjustmentAmount() 
      return TODO array impl
  # setTaxAmount() 
      param TODO array impl
  # getTaxAmount() 
      return TODO array impl
  # setTaxRate() 
      param TODO array impl
  # getTaxRate() 
      return TODO array impl
  # getTotal() 
      return TODO array impl
  # setTotal() 
      param TODO array impl
  # getTotalOfDetails() 
      return TODO array impl
  # calcTaxAmount() 
      return TODO array impl
  # getReceiptTotal() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # getType() 
      return TODO array impl
  # setType() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # PrePersist() 
      ORM\PrePersist TODO array impl
  # PreUpdate() 
      ORM\PreUpdate TODO array impl
  # updateTotal() 

Xnni\BillBundle\Domain\Data\BillDetail
  ORM\Table
  ORM\Entity
  ORM\HasLifecycleCallbacks
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints

  - id 
      var integer
  - Bill 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - sortOrder 
      var integer
  - summary 
      var string
  - unitPrice 
      var string
  - quantity 
      var string
  - total 
      var string
  - comment 
      var string

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setSortOrder() 
      param TODO array impl
      return TODO array impl
  # getSortOrder() 
      return TODO array impl
  # setSummary() 
      param TODO array impl
      return TODO array impl
  # getSummary() 
      return TODO array impl
  # setUnitPrice() 
      param TODO array impl
      return TODO array impl
  # getUnitPrice() 
      return TODO array impl
  # setQuantity() 
      param TODO array impl
      return TODO array impl
  # getQuantity() 
      return TODO array impl
  # setTotal() 
      param TODO array impl
      return TODO array impl
  # getTotal() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setBill() 
      param TODO array impl
  # getBill() 
      return TODO array impl
  # calcTotal() 
  # PrePersist() 
      ORM\PrePersist TODO array impl
  # PreUpdate() 
      ORM\PreUpdate TODO array impl

Xnni\BillBundle\Domain\Data\Repository\BillDetailRepository
  use Doctrine\ORM\EntityRepository
  use Xnni\BillBundle\Domain\Data\Repository\Criteria\BillCriteria



Xnni\BillBundle\Domain\Data\Repository\BillRepository
  use Doctrine\ORM\EntityRepository
  use Xnni\BillBundle\Domain\Data\Repository\Criteria\BillCriteria
  use Xnni\ConstructionBundle\Domain\Data\Company


  # queryByCriteria() 
  # findWithCompany() 
      param TODO array impl
      return TODO array impl

Xnni\BillBundle\Domain\Data\Repository\Criteria\BillCriteria
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\BaseCriteria
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification

  - constructionSite 
  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - specs 
      var Specification[]

  # __construct() コンストラクタ
  # addSpec() 
      param TODO array impl
  # hasConstructionSite() 
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # merge() 

Xnni\BillBundle\Form\Type\BillDetailType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\BillBundle\Domain\Data\BillDetail
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\BillBundle\Form\Type\BillType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\BillBundle\Report\BillPDF
  package
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\BillBundle\Domain\Data\BillDetail
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\PrintInfo

  - bill 
      var Bill
  - printinfo 
      var PrintInfo
  - fontName 

  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\UseCase\Purchase\AddMulti
  DI\Service
  package
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\SummaryUpdatable
  use Xnni\ConstructionBundle\Form\Entity\PurchaseList
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - domainFactoryObject 
      var \Closure

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
      SummaryUpdate TODO array impl
  # __toString() 
      return TODO array impl

Xnni\BillBundle\UseCase\Bill\EditMulti
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\BillBundle\Domain\Data\BillDetail
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager

  # __construct() constructor
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\BillBundle\XnniBillBundle
  use Symfony\Component\HttpKernel\Bundle\Bundle


  # boot() 

Xnni\ConstructionBundle\Domain\Service\Ledger\GroupRelationUpdate
  package
  DI\Service
  use Ginq\Ginq
  use CG\Proxy\MethodInvocation
  use Doctrine\Common\Annotations\Reader
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\StaffGroupRelationRepository
  use Xnni\ConstructionBundle\Domain\Data\Summary\ConstructionSiteSummary
  use Xnni\ConstructionBundle\Domain\Util\Clock
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate

  - entityManager 
      var EntityManager
  - clock 
      var Clock
  - annotationReader 
      var Reader

  # intercept() 
  # interceptBody() 

Xnni\ConstructionBundle\Domain\Service\ConstructionSite\SummaryUpdate
  package
  DI\Service
  use CG\Proxy\MethodInvocation
  use Doctrine\Common\Annotations\Reader
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Summary\ConstructionSiteSummary
  use Xnni\ConstructionBundle\Domain\Util\Clock
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate

  - entityManager 
      var EntityManager
  - clock 
      var Clock
  - summaryCalculator 
      var ConstructionSiteSummary
  - annotationReader 
      var Reader

  # intercept() 
  # interceptBody() 
  # updateSummary() 

Xnni\ConstructionBundle\Aop\GroupRelationUpdatePointCut
  use Doctrine\Common\Annotations\Reader
  use JMS\AopBundle\Aop\PointcutInterface
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Annotations\GroupRelationUpdate

  - annotationReader 
      var Reader

  # __construct() 
  # matchesClass() 
  # matchesMethod() 

Xnni\ConstructionBundle\Aop\SummaryUpdatePointCut
  use Doctrine\Common\Annotations\Reader
  use JMS\AopBundle\Aop\PointcutInterface
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate

  - annotationReader 
      var Reader

  # __construct() 
  # matchesClass() 
  # matchesMethod() 

Xnni\ConstructionBundle\ApplicationContext
  package
  use Liip\ThemeBundle\Helper\DeviceDetectionInterface
  use Symfony\Component\HttpFoundation\Request
  use Symfony\Component\Security\Core\SecurityContext
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Service\File\ContractLogo

  - securityContext 
      var SecurityContext
  - device 
      var DeviceDetectionInterface
  - request 
      var Request
  - contractLogo 
      var ContractLogo

  # setRequest() 
      param TODO array impl
  # setSecurityContext() 
      param TODO array impl
  # getDevice() 
      return TODO array impl
  # setDevice() 
      param TODO array impl
  # setContractLogo() 
      param TODO array impl
  # getContractLogo() 
      return TODO array impl
  # isAvailableDailyMenus() 日次メニューを利用可能か？
  # getCompanyFromLoginUser() 
      return TODO array impl
  # getLogo() 
      return TODO array impl
  # getContractColor1() 
      return TODO array impl

Xnni\ConstructionBundle\Command\AccountAddCommand
  package
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # interact() 
      param TODO array impl
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\AdminAccountAddCommand
  package
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\BaseCommand
  package
  use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface


  # getService() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\ContractAddCommand
  package
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # interact() 
      param TODO array impl
  # execute() 

Xnni\ConstructionBundle\Command\ContractListCommand
  package
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\ContractShowCommand
  package
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # interact() 
      param TODO array impl
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\CopyFontFileCommand
  package
  use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Finder\Finder


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\ImportProcessTypeCommand
  use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputDefinition
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Yaml\Yaml
  use Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Data\Repository\CompanyRepository


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl

Xnni\ConstructionBundle\Command\RemoveUnusedProcessTypeCommand
  package
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  use Xnni\ConstructionBundle\Domain\Data\ProcessType


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\TestCommand
  package
  use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Command\UpdateConstructionSiteCommand
  package
  use Proxies\__CG__\Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract


  # configure() コマンドの名前、引数、オプションを設定する
  # execute() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Composer\ScriptHandler
  package
  use Symfony\Component\ClassLoader\ClassCollectionLoader
  use Symfony\Component\Process\Process
  use Symfony\Component\Process\PhpExecutableFinder
  use Composer\Script\CommandEvent


  # copyFontFile() 
      param TODO array impl
  # executeCommand() 
      param TODO array impl
      throws TODO array impl
  # getOptions() 
      param TODO array impl
      return TODO array impl
  # getPhp() 
      return TODO array impl
      throws TODO array impl

Xnni\ConstructionBundle\Controller\Revenue\SearchController
  package
  Route
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # searchAction() 
      Route TODO array impl
      Template TODO array impl
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSite\DetailController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite

  - useCase 
      var \Xnni\ConstructionBundle\UseCase\ConstructionSite\Detail

  # showAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSite\DetailPdfController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\HttpFoundation\Response
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Summary\ConstructionSiteSummary
  use Xnni\ConstructionBundle\Report\ConstructionSitePDF

  - useCase 
  - costCalcuration 
  - dailyReportForConstructionSite 

  # showAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSite\EditBudgetController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Budget
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSite\EditOrderStateController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\Purchase\SummaryController
  package
  Route
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Type\ConstructionSiteType

  - useCase 
  - businessCalendar 
      var BusinessCalendar
  - primeContractorRepository 
      var PrimeContractorRepository

  # searchAction() 
      Route TODO array impl
      Template TODO array impl
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSiteProcess\CompleteController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\HttpFoundation\JsonResponse
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer

  - useCase 

  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
  # createForm() 

Xnni\ConstructionBundle\Controller\ConstructionSiteProcess\EditAdditionalBillController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteAdditionalBill

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSiteProcess\EditBillController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteBill

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\ConstructionSiteProcess\EditProcessController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl
  # createProcess() 

Xnni\ConstructionBundle\Controller\ConstructionSiteProcess\EditReceiptController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\DataTransformer\DateTextViewTransformer
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteBill
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteReceipt

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # inputAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      ParamConverter TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\Revenue\SearchPdfController
  package
  Route
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\HttpFoundation\Response
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Report\RevenuePDF

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # searchAction() 
      Route TODO array impl
      Template TODO array impl
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\Purchase\AddMulti2Controller
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\SupplierSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\SupplierRepository
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\UnfinishedConstructionSite
  use Xnni\ConstructionBundle\Form\Entity\PurchaseList2
  use Xnni\ConstructionBundle\Form\Type\ConstructionSiteType
  use Xnni\ConstructionBundle\UseCase

  - useCase 
      var UseCase\Purchase\AddMulti
  - supplierRepository 
      var SupplierRepository
  - unfinishedConstructionSiteSpecification 
      var UnfinishedConstructionSite
  - primeContractorRepository 
      var PrimeContractorRepository

  # __construct() コンストラクタ
  # inputAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # rowAction() 
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl
  # createPrimeContractorForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\DailyReport\AddMulti3Controller
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository
  use Xnni\ConstructionBundle\Form\Entity\DailyReportList3
  use Xnni\ConstructionBundle\Form\Type\ConstructionSiteType
  use Xnni\ConstructionBundle\UseCase\UseCase

  - useCase 
      var UseCase
  - primeContractorRepository 
      var PrimeContractorRepository

  # __construct() コンストラクタ
  # inputAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl
  # createPrimeContractorForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\Purchase\SpAddController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\UseCase\Purchase\Add
  use Xnni\ConstructionBundle\UseCase

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # __construct() コンストラクタ
  # inputAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # confirmationPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\DailyReport\TableController
  package
  Route
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Type\ConstructionSiteType

  - useCase 
  - businessCalendar 
      var BusinessCalendar
  - primeContractorRepository 
      var PrimeContractorRepository

  # searchAction() 
      Route TODO array impl
      Template TODO array impl
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\DailyReport\TablePdfController
  Route
  use Symfony\Component\HttpFoundation\Response
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\HttpKernel\Config\FileLocator
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Report\ReportPDF
  use Xnni\ConstructionBundle\UseCase\DailyReport\Table

  - useCase 
      var \Xnni\ConstructionBundle\UseCase\DailyReport\Table
  - businessCalendar 
      var BusinessCalendar
  - fileLocator 
      var FileLocator

  # pdfAction() 
      Route TODO array impl
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\Purchase\SummaryPdfController
  package
  Route
  use Symfony\Component\Config\FileLocator
  use Symfony\Component\HttpFoundation\Response
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Type\ConstructionSiteType
  use Xnni\ConstructionBundle\Report\PurchaseSummaryPDF

  - useCase 
  - businessCalendar 
      var BusinessCalendar
  - fileLocator 
      var FileLocator

  # searchAction() 
      Route TODO array impl
      Template TODO array impl
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\Material\SearchItemController
  package
  Route
  use JMS\Serializer\Serializer
  use Symfony\Component\HttpFoundation\JsonResponse
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\MaterialSearchCriteria

  - useCase 
  - serializer 
      var Serializer

  # inputAction() 
      Route TODO array impl
      Template TODO array impl
  # searchAction() 
      Route TODO array impl
  # createForm() 
  # createSearchForm() 
      return TODO array impl

Xnni\ConstructionBundle\Controller\Receipt\AddModalController
  package
  Route
  use Symfony\Component\Form\FormInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\HttpFoundation\Request
  use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException
  use Xnni\BillBundle\Domain\Data\Repository\BillRepository
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Data\Receipt
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer
  use Xnni\ConstructionBundle\UseCase\Receipt\Add
  use Xnni\ConstructionBundle\UseCase

  - useCase 
  - billRepository 
      var BillRepository
  - businessCalendar 
      var BusinessCalendar

  # __construct() コンストラクタ
  # inputAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # inputPostAction() 
      Route TODO array impl
      Method TODO array impl
      Template TODO array impl
  # createForm() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Controller\Receipt\CheckController
  package
  Route
  use Symfony\Component\HttpFoundation\Session
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Repository\Criteria\BillCriteria
  use Xnni\ConstructionBundle\Controller\UseCaseController
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar

  - useCase 
  - businessCalendar 
      var BusinessCalendar

  # searchAction() 
      Route TODO array impl
      Template TODO array impl
  # createSearchForm() 
      return TODO array impl
  # createCheckForm() 

Xnni\ConstructionBundle\Controller\Revenue\Selection
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite

  - selectionList 

  # __construct() 
  # hasSelection() 
      return TODO array impl
  # contains() 
      param TODO array impl
      return TODO array impl
  # getIds() 

Xnni\ConstructionBundle\Controller\UseCaseController
  package
  use Knp\Component\Pager\Paginator
  use Psr\Log\LoggerInterface
  use Symfony\Component\Form\Form
  use Symfony\Component\Form\FormFactoryInterface
  use Symfony\Component\Form\FormInterface
  use Symfony\Component\HttpFoundation\RedirectResponse
  use Symfony\Component\HttpFoundation\Request
  use Symfony\Component\HttpFoundation\Session\SessionInterface
  use Symfony\Component\Routing\RouterInterface
  use Xnni\ConstructionBundle\Exception\InvalidOperationException
  use Xnni\ConstructionBundle\UseCase

  - sessionKey 
      var string
  - useCase 
      var UseCase\UseCase
  - formFactory 
      var FormFactoryInterface
  - router 
      var RouterInterface
  - request 
      var Request
  - session 
      var SessionInterface
  - formData 
  - paginator 
      var Paginator
  - logger 
      var LoggerInterface
  - listType 
      var string

  # inputActionBody() 
      param TODO array impl
      return TODO array impl
  # inputPostActionBody() 
      param TODO array impl
      return TODO array impl
  # confirmationActionBody() 
      param TODO array impl
      return TODO array impl
  # confirmationPostActionBody() 
      param TODO array impl
      return TODO array impl
  # deleteActionBody() 
      param TODO array impl
      return TODO array impl
  # listUpActionBody() 
      param TODO array impl
      return TODO array impl
  # searchActionBody() 
      param TODO array impl
      return TODO array impl
  # createConfirmationForm() 
      return TODO array impl
  # createRemoveConfirmationForm() 
      return TODO array impl
  # initialize() セッションデータ初期化
  # cleanUp() セッションデータクリア
  # getFormData() 
      return TODO array impl
  # recordFormData() 
      param TODO array impl
  # redirectToInput() 
      param TODO array impl
      return TODO array impl
  # redirectToConfirmation() 
      param TODO array impl
      return TODO array impl
  # dangerFlash() 
      param TODO array impl
  # successFlash() 
      param TODO array impl
  # createViaFactory() 
      return TODO array impl
  # redirectToError() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\DependencyInjection\XnniConstructionExtension
  use Symfony\Component\DependencyInjection\ContainerBuilder
  use Symfony\Component\Config\FileLocator
  use Symfony\Component\DependencyInjection\DefinitionDecorator
  use Symfony\Component\HttpKernel\DependencyInjection\Extension
  use Symfony\Component\DependencyInjection\Loader


  # load() コンフィギュレーションの読み込み、その他サービスの定義処理

Xnni\ConstructionBundle\Domain\Data\ActivityLog
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - Contract 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - type 
      ORM\Column TODO array impl
  - data 
      ORM\Column TODO array impl
  - ip 
      ORM\Column TODO array impl
  - client 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
  # getContract() 
      return TODO array impl
  # setContract() 
      param TODO array impl
  # setType() 
      param TODO array impl
  # getType() 
      return TODO array impl
  # setData() 
      param TODO array impl
  # getData() 
      return TODO array impl
  # setClient() 
      param TODO array impl
  # getClient() 
      return TODO array impl
  # setIp() 
      param TODO array impl
  # getIp() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\AdminLoginUser
  package
  ORM\Entity
  use Doctrine\ORM\Mapping


  # getTypeName() 
      return TODO array impl
  # getRoles() 
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\BackendLoginUser
  package
  ORM\Entity
  use Doctrine\ORM\Mapping


  # getTypeName() 
      return TODO array impl
  # getRoles() 
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\BusinessDay
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - name 
      var string
  - targetDate 
      var date
  - type 
      var string
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setId() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCompany() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setType() 
      param TODO array impl
  # getType() 
      return TODO array impl
  # isWeekday() 
      return TODO array impl
  # toggleType() タイプをトグルする
  # __toString() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ

Xnni\ConstructionBundle\Domain\Data\Company
  ORM\Entity
  ORM\Table
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - Staffs 
      ORM\OneToMany TODO array impl
  - PrimeContractors 
      ORM\OneToMany TODO array impl
  - ConstructionSites 
      ORM\OneToMany TODO array impl
  - Bills 
      ORM\OneToMany TODO array impl
  - Contract 
      ORM\OneToOne TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - staffEmail 
      ORM\Column TODO array impl
  - fax 
      ORM\Column TODO array impl
  - tel 
      ORM\Column TODO array impl
  - staffName 
      ORM\Column TODO array impl
  - address 
      ORM\Column TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - ricohCustomer 
      ORM\Column TODO array impl
  - address2 
      ORM\Column TODO array impl
  - zip 
      ORM\Column TODO array impl
  - representative 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setStaffEmail() 
      param TODO array impl
      return TODO array impl
  # getStaffEmail() 
      return TODO array impl
  # setFax() 
      param TODO array impl
      return TODO array impl
  # getFax() 
      return TODO array impl
  # setTel() 
      param TODO array impl
      return TODO array impl
  # getTel() 
      return TODO array impl
  # setStaffName() 
      param TODO array impl
      return TODO array impl
  # getStaffName() 
      return TODO array impl
  # setAddress() 
      param TODO array impl
      return TODO array impl
  # getAddress() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # addStaff() 
      param TODO array impl
      return TODO array impl
  # removeStaff() 
      param TODO array impl
  # getStaffs() 
      return TODO array impl
  # addPrimeContractor() 
      param TODO array impl
      return TODO array impl
  # removePrimeContractor() 
      param TODO array impl
  # getPrimeContractors() 
      return TODO array impl
  # setContract() 
      param TODO array impl
      return TODO array impl
  # getContract() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ
  # addConstructionSite() 
      param TODO array impl
      return TODO array impl
  # removeConstructionSite() 
      param TODO array impl
  # getConstructionSites() 
      return TODO array impl
  # setRicohCustomer() 
      param TODO array impl
  # getRicohCustomer() 
      return TODO array impl
  # setAddress2() 
      param TODO array impl
  # getAddress2() 
      return TODO array impl
  # setRepresentative() 
      param TODO array impl
  # getRepresentative() 
      return TODO array impl
  # setZip() 
      param TODO array impl
  # getZip() 
      return TODO array impl
  # setBills() 
      param TODO array impl
  # getBills() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Budget
  ORM\Entity
  ORM\Table
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - purchase 
  - outsourcing 
  - expense 
  - laborCost 
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - ConstructionSite 
      ORM\OneToOne TODO array impl
      ORM\JoinColumn TODO array impl

  # __construct() 
  # setCreatedAt() 
      param TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setExpense() 
      param TODO array impl
  # getExpense() 
      return TODO array impl
  # setId() 
      param TODO array impl
  # getId() 
      return TODO array impl
  # setLaborCost() 
      param TODO array impl
  # getLaborCost() 
      return TODO array impl
  # setOutsourcing() 
      param TODO array impl
  # getOutsourcing() 
      return TODO array impl
  # setPurchase() 
      param TODO array impl
  # getPurchase() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # getTotalAmount() 
      return TODO array impl
  # getRevenueGoal() 目標粗利を取得する
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  ORM\Entity
  ORM\Table
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Entity
  use Xnni\ConstructionBundle\Domain\Data\ProcessType

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - status 
      ORM\Column TODO array impl
  - forceFinish 
      ORM\Column TODO array impl
  - skip 
      ORM\Column TODO array impl
  - targetDate 
      ORM\Column TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - ProcessType 
      var ProcessType
  - SubProcesses 
      var ArrayCollection|SubProcess[]

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setProcessType() 
      param TODO array impl
  # getProcessType() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # getStatusLabel() 
      return TODO array impl
  # getSubProcesses() 
      return TODO array impl
  # setSubProcesses() 
      param TODO array impl
  # addSubProcess() 
  # updateStatus() サブプロセスのステータスから全体ステータスを更新する
  # getForceFinish() 
      return TODO array impl
  # setForceFinish() 
      param TODO array impl
  # getSkip() 
      return TODO array impl
  # setSkip() 
      param TODO array impl
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\Domain\Data\ConstructionSite\SubProcess
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Entity
  use Xnni\ConstructionBundle\Domain\Data\ProcessSubType

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - status 
      ORM\Column TODO array impl
  - targetDate 
      ORM\Column TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - ProcessSubType 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - Process 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # setProcess() 
      param TODO array impl
  # getProcess() 
      return TODO array impl
  # setProcessSubType() 
      param TODO array impl
  # getProcessSubType() 
      return TODO array impl
  # isFinished() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # getStatusList() 
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\UseCase\Purchase\Summary
  DI\Service
  package
  use Doctrine\ORM\Query
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Summary\PurchaseSummary
  use Xnni\ConstructionBundle\UseCase\UseCase

  - purchaseSummary 
      var PurchaseSummary

  # __construct() コンストラクタ
  # prepare() 
      param TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  ORM\Entity
  ORM\Table
  Assert\Callback
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\ORM\Mapping
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Budget
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Summary
  use Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteBudgetFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteSummaryFactory
  use Ginq\Ginq

  - CONSTRUCTION_TYPES 
  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - name 
      var string
  - Staff 
      var Staff
  - PrimeContractor 
      var PrimeContractor
  - Receipts 
      ORM\OneToMany TODO array impl
      ORM\OrderBy TODO array impl
  - Purchases 
      ORM\OneToMany TODO array impl
      ORM\OrderBy TODO array impl
  - Expenses 
      ORM\OneToMany TODO array impl
      ORM\OrderBy TODO array impl
  - Outsourcings 
      ORM\OneToMany TODO array impl
      ORM\OrderBy TODO array impl
  - DailyReports 
      ORM\OneToMany TODO array impl
      ORM\OrderBy TODO array impl
  - Bills 
      var ArrayCollection|Bill[]
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - fixedCostPerMonth 
      ORM\Column TODO array impl
  - endDate 
      ORM\Column TODO array impl
  - startDate 
      ORM\Column TODO array impl
  - contractDate 
      ORM\Column TODO array impl
  - contractAmount 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Range TODO array impl
  - contractAmountTax 
      ORM\Column TODO array impl
  - additionalAmount 
      ORM\Column TODO array impl
      Assert\Range TODO array impl
  - additionalAmount2 
      ORM\Column TODO array impl
      Assert\Range TODO array impl
  - additionalAmount3 
      ORM\Column TODO array impl
      Assert\Range TODO array impl
  - additionalAmount4 
      ORM\Column TODO array impl
      Assert\Range TODO array impl
  - additionalAmount5 
      ORM\Column TODO array impl
      Assert\Range TODO array impl
  - additionalAmountTax 
      ORM\Column TODO array impl
  - clientContact 
      ORM\Column TODO array impl
  - clientName 
      ORM\Column TODO array impl
  - address 
      ORM\Column TODO array impl
  - billNoComment 
      ORM\Column TODO array impl
  - constructionType 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - status 
      ORM\Column TODO array impl
  - Budget 
      ORM\OneToOne TODO array impl
  - Summary 
      ORM\OneToOne TODO array impl
  - Processes 
      var Process[]
  - processComplete 
      var bool
  - evaluationRate 
      var number
  - plannedLaborCost 
      var string
  - plannedLaborCostDetail 
      var string
  - balanceSheetComment 
      var string

  # __construct() コンストラクタ
  # createBudget() 
  # createSummary() 
  # getId() 
      return TODO array impl
  # setId() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setFixedCostPerMonth() 
      param TODO array impl
      return TODO array impl
  # getFixedCostPerMonth() 
      return TODO array impl
  # setEndDate() 
      param TODO array impl
      return TODO array impl
  # getEndDate() 
      return TODO array impl
  # setStartDate() 
      param TODO array impl
      return TODO array impl
  # getStartDate() 
      return TODO array impl
  # setContractDate() 
      param TODO array impl
      return TODO array impl
  # getContractDate() 
      return TODO array impl
  # setContractAmount() 
      param TODO array impl
      return TODO array impl
  # getContractAmount() 
      return TODO array impl
  # setClientContact() 
      param TODO array impl
      return TODO array impl
  # getClientContact() 
      return TODO array impl
  # setClientName() 
      param TODO array impl
      return TODO array impl
  # getClientName() 
      return TODO array impl
  # setAddress() 
      param TODO array impl
      return TODO array impl
  # getAddress() 
      return TODO array impl
  # setConstructionType() 
      param TODO array impl
      return TODO array impl
  # getConstructionType() 
      return TODO array impl
  # getConstructionTypeName() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
      return TODO array impl
  # getPrimeContractor() 
      return TODO array impl
  # addReceipt() 
      param TODO array impl
      return TODO array impl
  # removeReceipt() 
      param TODO array impl
  # getReceipts() 
      return TODO array impl
  # addPurchase() 
      param TODO array impl
      return TODO array impl
  # removePurchase() 
      param TODO array impl
  # getPurchases() 
      return TODO array impl
  # addExpense() 
      param TODO array impl
      return TODO array impl
  # removeExpense() 
      param TODO array impl
  # getExpenses() 
      return TODO array impl
  # addOutsourcing() 
      param TODO array impl
      return TODO array impl
  # removeOutsourcing() 
      param TODO array impl
  # getOutsourcings() 
      return TODO array impl
  # addDailyReport() 
      param TODO array impl
      return TODO array impl
  # removeDailyReport() 
      param TODO array impl
  # getDailyReports() 
      return TODO array impl
  # getCompany() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
      return TODO array impl
  # getStatusList() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
  # getStatusName() 
      return TODO array impl
  # getStatus() 
      return TODO array impl
  # setAdditionalAmountTax() 
      param TODO array impl
  # getAdditionalAmountTax() 
      return TODO array impl
  # setContractAmountTax() 
      param TODO array impl
  # getContractAmountTax() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # getNameWithStatus() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getStaff() 
      return TODO array impl
  # setBillNoComment() 
      param TODO array impl
  # getBillNoComment() 
      return TODO array impl
  # isProcessComplete() 
      return TODO array impl
  # setProcessComplete() 
      param TODO array impl
  # getNameWithStatusAndPrimeContractor() 
      return TODO array impl
  # equalsTo() 
      param TODO array impl
      return TODO array impl
  # validateConstructionSite() データの整合性をチェックする
  # setAdditionalAmount() 
      param TODO array impl
  # getAdditionalAmount() 
      return TODO array impl
  # setBills() 
      param TODO array impl
  # getBills() 
      return TODO array impl
  # setAdditionalAmount2() 
      param TODO array impl
  # getAdditionalAmount2() 
      return TODO array impl
  # setAdditionalAmount3() 
      param TODO array impl
  # getAdditionalAmount3() 
      return TODO array impl
  # setAdditionalAmount4() 
      param TODO array impl
  # getAdditionalAmount4() 
      return TODO array impl
  # setAdditionalAmount5() 
      param TODO array impl
  # getAdditionalAmount5() 
      return TODO array impl
  # setBudget() 
      param TODO array impl
  # getBudget() 
      return TODO array impl
  # setSummary() 
      param TODO array impl
  # getSummary() 
      return TODO array impl
  # getProcesses() 
      return TODO array impl
  # setProcesses() 
      param TODO array impl
  # getEvaluationRate() 
      return TODO array impl
  # setEvaluationRate() 
      param TODO array impl
  # getPlannedLaborCost() 
      return TODO array impl
  # setPlannedLaborCost() 
      param TODO array impl
  # getPlannedLaborCostDetail() 
      return TODO array impl
  # setPlannedLaborCostDetail() 
      param TODO array impl
  # getBalanceSheetComment() 
      return TODO array impl
  # setBalanceSheetComment() 
      param TODO array impl
  # getProcess() 
      param TODO array impl
      return TODO array impl
  # getBillStatus() 
      return TODO array impl
  # getAdditionalBillStatus() 
      param TODO array impl
      return TODO array impl
  # getReceiptStatus() 
      return TODO array impl
  # getTotalAmount() 
      return TODO array impl
  # getActiveEvaluationRate() この現場で計算に使う評価％を取得する     *     * 得意先がある場合は、得意先の％
  # getBillByType() 
      param TODO array impl
      return TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\Domain\Data\Contract
  ORM\Entity
  ORM\Table
  UniqueEntity
  ServiceCallback
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity
  use Symfony\Component\PropertyAccess\Exception\RuntimeException
  use PHPMentors\ValidatorBundle\Validator\Constraints\ServiceCallback
  use Ginq\Ginq

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - LoginUsers 
      var LoginUser[]
  - Company 
      var Company
  - PrintInfo 
      var PrintInfo
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - directoryName 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - status 
      ORM\Column TODO array impl
  - endDate 
      ORM\Column TODO array impl
  - startDate 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - accountMax 
      ORM\Column TODO array impl
  - FeeReceipts 
      var FeeReceipt[]
  - ActivityLogs 
      var ActivityLog[]
  - image 
  - paymentType 
      ORM\Column TODO array impl
  - color1 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
      return TODO array impl
  # getStatus() 
      return TODO array impl
  # setEndDate() 
      param TODO array impl
      return TODO array impl
  # getEndDate() 
      return TODO array impl
  # setStartDate() 
      param TODO array impl
      return TODO array impl
  # getStartDate() 
      return TODO array impl
  # addLoginUser() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # removeLoginUser() 
      param TODO array impl
  # getLoginUsers() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
      return TODO array impl
  # getCompany() 
      return TODO array impl
  # setDirectoryName() 
      param TODO array impl
      return TODO array impl
  # getDirectoryName() 
      return TODO array impl
  # setAccountMax() 
      param TODO array impl
  # getAccountMax() 
      return TODO array impl
  # setFeeReceipts() 
      param TODO array impl
  # getFeeReceipts() 
      return TODO array impl
  # addFeeReceipt() 
      param TODO array impl
  # getLatestFeeReceipt() 最新のシステム利用料入金オブジェクトを取得する
  # setActivityLogs() 
      param TODO array impl
  # getActivityLogs() 
      return TODO array impl
  # getImage() 
      return TODO array impl
  # setImage() 
      param TODO array impl
  # setColor1() 
      param TODO array impl
  # getColor1() 
      return TODO array impl
  # setPaymentType() 
      param TODO array impl
  # getPaymentType() 
      return TODO array impl
  # setPrintInfo() 
      param TODO array impl
  # getPrintInfo() 
      return TODO array impl
  # __toString() 文字列化

Xnni\ConstructionBundle\Domain\Data\DailyReport
  ORM\Entity
  ORM\Table
  Assert\Callback
  ServiceCallback
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface
  use PHPMentors\ValidatorBundle\Validator\Constraints\ServiceCallback

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - ConstructionSite 
      var ConstructionSite
  - Staff 
      var Staff
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - hourlyPay 
      ORM\Column TODO array impl
  - hourlyPay2 
      ORM\Column TODO array impl
  - hourlyPay3 
      ORM\Column TODO array impl
  - endTime 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - startTime 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - targetDate 
      ORM\Column TODO array impl
      Assert\NotNull TODO array impl
  - place 
      ORM\Column TODO array impl
  - lineTotal 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setHourlyPay() 
      param TODO array impl
      return TODO array impl
  # getHourlyPay() 
      return TODO array impl
  # setHourlyPay2() 
      param TODO array impl
      return TODO array impl
  # getHourlyPay2() 
      return TODO array impl
  # setHourlyPay3() 
      param TODO array impl
      return TODO array impl
  # getHourlyPay3() 
      return TODO array impl
  # setEndTime() 
      param TODO array impl
      return TODO array impl
  # getEndTime() 
      return TODO array impl
  # getEndHour() 
      return TODO array impl
  # setStartTime() 
      param TODO array impl
      return TODO array impl
  # getStartTime() 
      return TODO array impl
  # getStartHour() 
      return TODO array impl
  # getStartPoint() 
      return TODO array impl
  # getEndPoint() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
      return TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
      return TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
      return TODO array impl
  # getStaff() 
      return TODO array impl
  # setPlace() 
      param TODO array impl
  # getPlace() 
      return TODO array impl
  # getHours() 
      param TODO array impl
      return TODO array impl
  # getNumberOfHourBlock() 
      return TODO array impl
  # getNumberOfPointBlock() 
      return TODO array impl
  # setLineTotal() 
      param TODO array impl
  # getLineTotal() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # isSeparatedBy() 
      param TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ
  # getPlaceList() 

Xnni\ConstructionBundle\Domain\Data\Entity
  package


  # __toString() 

Xnni\ConstructionBundle\Domain\Data\Expense
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - quantity 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Type TODO array impl
      Assert\GreaterThan TODO array impl
  - unitPrice 
      ORM\Column TODO array impl
      Assert\Type TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - expenseType 
      ORM\Column TODO array impl
  - targetDate 
      ORM\Column TODO array impl
  - Staff 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl

  # __construct() コンストラクタ
  # getExpenseTypes() 
      return TODO array impl
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setQuantity() 
      param TODO array impl
      return TODO array impl
  # getQuantity() 
      return TODO array impl
  # setUnitPrice() 
      param TODO array impl
      return TODO array impl
  # getUnitPrice() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # setExpenseType() 
      param TODO array impl
      return TODO array impl
  # getExpenseType() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
      return TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
      return TODO array impl
  # getStaff() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
      return TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # getLineTotal() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # getExpenseTypeName() 
      return TODO array impl
  # getUnitPriceInTax() 
  # setUnitPriceInTax() 
  # __toString() 
      return TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\Domain\Data\Factory\BusinessDayFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\BusinessDay
  use Xnni\ConstructionBundle\Domain\Data\Company


  # create() オブジェクトを生成する     *

Xnni\ConstructionBundle\Domain\Data\Factory\CompanyFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Company


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteBudgetFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Budget


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteProcessFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\ProcessType

  - subProcessFactory 
      var ConstructionSiteSubProcessFactory

  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteSubProcessFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  use Xnni\ConstructionBundle\Domain\Data\ProcessType


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteSummaryFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Summary


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ContractFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Contract


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\DailyReportFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\DailyReport


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ExpenseFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Expense


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\LoginUserFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\AdminLoginUser
  use Xnni\ConstructionBundle\Domain\Data\BackendLoginUser
  use Xnni\ConstructionBundle\Domain\Data\LoginUser
  use Xnni\ConstructionBundle\Domain\Data\NormalLoginUser
  use Xnni\ConstructionBundle\Domain\Service\LoginUserService


  # create() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\MaterialFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Material


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\OutsourceeFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Outsourcee


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\OutsourcingFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\PrimeContractorFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\PrimeContractorGroupFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Proxies\__CG__\Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractorGroup


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ProcessSubTypeFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  use Xnni\ConstructionBundle\Domain\Data\ProcessType


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ProcessTypeFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\ProcessType


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\PurchaseFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Purchase


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\ReceiptFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Receipt


  # create() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\StaffFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\CompanyRepository
  use Xnni\ConstructionBundle\Domain\Data\Staff


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\StaffGroupFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\CompanyRepository
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Factory\StaffGroupRelationFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Staff
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup
  use Xnni\ConstructionBundle\Domain\Data\StaffGroupRelation


  # create() オブジェクトを生成する     *

Xnni\ConstructionBundle\Domain\Data\Factory\SupplierFactory
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Supplier


  # create() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\FeeReceipt
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - Contract 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - targetDate 
      var DateTime
  - memo 
      ORM\Column TODO array impl
  - amount 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - contractEndDate 
      var \DateTime

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getContract() 
      return TODO array impl
  # setContract() 
      param TODO array impl
      return TODO array impl
  # setAmount() 
      param TODO array impl
  # getAmount() 
      return TODO array impl
  # setMemo() 
      param TODO array impl
  # getMemo() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setContractEndDate() 
      param TODO array impl
  # getContractEndDate() 
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Material
  ORM\Entity
  ORM\Table
  Serializer\ExclusionPolicy
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use JMS\Serializer\Annotation

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
      Serializer\Type TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
      Serializer\Exclude TODO array impl
  - createdAt 
      ORM\Column TODO array impl
      Serializer\Exclude TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
      Serializer\Type TODO array impl
  - code 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
      Serializer\Type TODO array impl
  - unitPrice 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
      Serializer\Type TODO array impl
  - unit 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Length TODO array impl
      Serializer\Type TODO array impl
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Serializer\Exclude TODO array impl

  # __construct() コンストラクタ
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # setCode() 
      param TODO array impl
  # getCode() 
      return TODO array impl
  # setUnitPrice() 
      param TODO array impl
  # getUnitPrice() 
      return TODO array impl
  # setUnit() 
      param TODO array impl
  # getUnit() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ

Xnni\ConstructionBundle\Domain\Data\Money


  # round() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\NormalLoginUser
  package
  ORM\Entity
  use Doctrine\ORM\Mapping


  # getTypeName() 
      return TODO array impl
  # getRoles() 
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\Outsourcee
  package
  use Symfony\Component\Validator\Constraints

  - staffName 
      var string
  - tel 
      var string
  - address 
      var string
  - name 
      var string

  # getAddress() 
      return TODO array impl
  # setAddress() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getStaffName() 
      return TODO array impl
  # setStaffName() 
      param TODO array impl
  # getTel() 
      return TODO array impl
  # setTel() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Outsourcing
  ORM\Entity
  ORM\Table
  Assert\Callback
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - quantity 
      ORM\Column TODO array impl
      Assert\Type TODO array impl
      Assert\GreaterThan TODO array impl
  - unitPrice 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Type TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - outsourcingType 
      ORM\Column TODO array impl
  - targetDate 
      ORM\Column TODO array impl
  - Staff 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - Outsourcee 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - outsourceFromOther 
      ORM\Column TODO array impl

  # setOutsourceFromOther() 
      param TODO array impl
  # getOutsourceFromOther() 
      return TODO array impl
  # __construct() コンストラクタ
  # getOutsourcingTypes() 
      return TODO array impl
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setQuantity() 
      param TODO array impl
      return TODO array impl
  # getQuantity() 
      return TODO array impl
  # setUnitPrice() 
      param TODO array impl
      return TODO array impl
  # getUnitPrice() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # setOutsourcingType() 
      param TODO array impl
      return TODO array impl
  # getOutsourcingType() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
      return TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
      return TODO array impl
  # getStaff() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
      return TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setOutsourcee() 
      param TODO array impl
      return TODO array impl
  # getOutsourcee() 
      return TODO array impl
  # getLineTotal() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # getOutsourcingTypeName() 
      return TODO array impl
  # __toString() 
      return TODO array impl
  # validateOutsourcee() 
      param TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Entity

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - ConstructionSites 
      ORM\OneToMany TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - staffName 
      ORM\Column TODO array impl
      Assert\Length TODO array impl
  - Staff 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - tel 
      ORM\Column TODO array impl
      Assert\Regex TODO array impl
      Assert\Length TODO array impl
  - address 
      ORM\Column TODO array impl
      Assert\Length TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - PrimeContractorGroup 
      var PrimeContractorGroup
  - evaluationRate 
      var number

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setStaffName() 
      param TODO array impl
      return TODO array impl
  # getStaffName() 
      return TODO array impl
  # setTel() 
      param TODO array impl
      return TODO array impl
  # getTel() 
      return TODO array impl
  # setAddress() 
      param TODO array impl
      return TODO array impl
  # getAddress() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # addConstructionSite() 
      param TODO array impl
      return TODO array impl
  # removeConstructionSite() 
      param TODO array impl
  # getConstructionSites() 
      return TODO array impl
  # getCompany() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
      return TODO array impl
  # setEvaluationRate() 
      param TODO array impl
  # getEvaluationRate() 
      return TODO array impl
  # hasConstructionSiteById() 
      param TODO array impl
      return TODO array impl
  # setPrimeContractorGroup() 
      param TODO array impl
  # getPrimeContractorGroup() 
      return TODO array impl
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ

Xnni\ConstructionBundle\Form\Entity\PrimeContractorGroup
  package
  use Symfony\Component\Validator\Constraints

  - name 
      var string
  - code 
      var string

  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # setCode() 
      param TODO array impl
  # getCode() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\PrintInfo
  ORM\Entity
  ORM\Table
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - Contract 
      ORM\OneToOne TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - fax 
      ORM\Column TODO array impl
  - tel 
      ORM\Column TODO array impl
  - address 
      ORM\Column TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - address2 
      ORM\Column TODO array impl
  - zip 
      ORM\Column TODO array impl
  - representative 
      ORM\Column TODO array impl
  - representativePosition 
      ORM\Column TODO array impl
  - bank1 
      ORM\Column TODO array impl
  - bank2 
      ORM\Column TODO array impl
  - bank3 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setFax() 
      param TODO array impl
      return TODO array impl
  # getFax() 
      return TODO array impl
  # setTel() 
      param TODO array impl
      return TODO array impl
  # getTel() 
      return TODO array impl
  # setAddress() 
      param TODO array impl
      return TODO array impl
  # getAddress() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # setAddress2() 
      param TODO array impl
  # getAddress2() 
      return TODO array impl
  # setRepresentative() 
      param TODO array impl
  # getRepresentative() 
      return TODO array impl
  # setZip() 
      param TODO array impl
  # getZip() 
      return TODO array impl
  # setContract() 
      param TODO array impl
  # getContract() 
      return TODO array impl
  # setBank1() 
      param TODO array impl
  # getBank1() 
      return TODO array impl
  # setBank2() 
      param TODO array impl
  # getBank2() 
      return TODO array impl
  # setBank3() 
      param TODO array impl
  # getBank3() 
      return TODO array impl
  # setRepresentativePosition() 
      param TODO array impl
  # getRepresentativePosition() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\SubProcess
  use Xnni\ConstructionBundle\Domain\Data\Entity

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - name 
      ORM\Column TODO array impl
  - sortOrder 
      ORM\Column TODO array impl
  - type 
      var string
  - ProcessType 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - SubProcesses 
      var SubProcess[]

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setSortOrder() 
      param TODO array impl
  # getSortOrder() 
      return TODO array impl
  # setProcessType() 
      param TODO array impl
  # getProcessType() 
      return TODO array impl
  # getType() 
      return TODO array impl
  # setType() 
      param TODO array impl
  # getSubProcesses() 
      return TODO array impl
  # __toString() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ

Xnni\ConstructionBundle\Domain\Data\ProcessType
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\Entity

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - name 
      ORM\Column TODO array impl
  - sortOrder 
      ORM\Column TODO array impl
  - Company 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - ProcessSubTypes 
      ORM\OneToMany TODO array impl
      ORM\OrderBy TODO array impl
  - Processes 
      var Process[]
  - useSkip 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getNameForLabel() 
  # setSortOrder() 
      param TODO array impl
  # getSortOrder() 
      return TODO array impl
  # setProcessSubTypes() 
      param TODO array impl
  # getProcessSubTypes() 
      return TODO array impl
  # __toString() 
      return TODO array impl
  # getProcesses() 
      return TODO array impl
  # getUseSkip() 
      return TODO array impl
  # setUseSkip() 
      param TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ
  # equalTo() 
      param TODO array impl
      return TODO array impl
  # getNameForPDF() 

Xnni\ConstructionBundle\Domain\Data\Purchase
  ORM\Entity
  ORM\Table
  Assert\Callback
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Validator\ExecutionContextInterface

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - quantity 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\GreaterThan TODO array impl
      Assert\Type TODO array impl
  - unitPrice 
      ORM\Column TODO array impl
      Assert\Type TODO array impl
  - name 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
  - purchaseType 
      ORM\Column TODO array impl
  - targetDate 
      ORM\Column TODO array impl
  - unit 
      ORM\Column TODO array impl
      Assert\Length TODO array impl
  - Staff 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - Supplier 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - supplyFromOther 
      ORM\Column TODO array impl

  # setSupplyFromOther() 
      param TODO array impl
  # getSupplyFromOther() 
      return TODO array impl
  # __construct() コンストラクタ
  # getPurchaseTypes() 
      return TODO array impl
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setQuantity() 
      param TODO array impl
      return TODO array impl
  # getQuantity() 
      return TODO array impl
  # setUnitPrice() 
      param TODO array impl
      return TODO array impl
  # getUnitPrice() 
      return TODO array impl
  # setName() 
      param TODO array impl
      return TODO array impl
  # getName() 
      return TODO array impl
  # setPurchaseType() 
      param TODO array impl
      return TODO array impl
  # getPurchaseType() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
      return TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
      return TODO array impl
  # getStaff() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
      return TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setSupplier() 
      param TODO array impl
      return TODO array impl
  # getSupplier() 
      return TODO array impl
  # getLineTotal() 
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # getPurchaseTypeName() 
      return TODO array impl
  # setUnit() 
      param TODO array impl
  # getUnit() 
      return TODO array impl
  # __toString() 
      return TODO array impl
  # validate() 
      param TODO array impl
  # validateSupplier() 
      param TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\Domain\Data\Receipt
  ORM\Entity
  ORM\Table
  ORM\HasLifecycleCallbacks
  use Doctrine\ORM\Mapping
  use Symfony\Component\Validator\Constraints

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - ConstructionSite 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - Bill 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
      Assert\NotBlank TODO array impl
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl
  - comment 
      ORM\Column TODO array impl
  - receive 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Type TODO array impl
  - fee 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl
      Assert\Type TODO array impl
  - amount 
      ORM\Column TODO array impl
  - targetDate 
      ORM\Column TODO array impl
      Assert\NotBlank TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setComment() 
      param TODO array impl
      return TODO array impl
  # getComment() 
      return TODO array impl
  # setAmount() 
      param TODO array impl
      return TODO array impl
  # getAmount() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
      return TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
      return TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setBill() 
      param TODO array impl
  # getBill() 
      return TODO array impl
  # setFee() 
      param TODO array impl
  # getFee() 
      return TODO array impl
  # setReceive() 
      param TODO array impl
  # getReceive() 
      return TODO array impl
  # calcTotal() 
  # PrePersist() 
      ORM\PrePersist TODO array impl
  # PreUpdate() 
      ORM\PreUpdate TODO array impl
  # copyFrom() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # __toString() 
      return TODO array impl
  # unserialize() アンシリアライズ
  # serialize() シリアライズ

Xnni\ConstructionBundle\Domain\Data\Repository\ActivityLogRepository
  use Doctrine\ORM\EntityRepository
  use Ginq\Ginq
  use Xnni\ConstructionBundle\Domain\Data\Contract


  # findByContract() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\BackendLoginUserRepository
  use Doctrine\ORM\EntityRepository
  use Symfony\Component\Security\Core\Exception\UnsupportedUserException
  use Symfony\Component\Security\Core\Exception\UsernameNotFoundException
  use Symfony\Component\Security\Core\User\UserInterface
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Ginq\Ginq
  use Xnni\ConstructionBundle\Domain\Data\LoginUser


  # loadUserByUsernameForAdmin() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl
  # refreshUser() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl
  # supportsClass() 
      param TODO array impl
      return TODO array impl
  # loadUserByUsername() 
      param TODO array impl
      throws TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\BusinessDayRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\BusinessDay
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\BusinessDaySearchCriteria


  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByDate() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\CompanyRepository
  use Doctrine\ORM\EntityRepository


  # getFirstCompany() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteBudgetRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company


  # findWithCompany() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteProcessRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteProcessSearchCriteria


  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\Criteria


  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryBuilderByCriteria() 

Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteSubProcessRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSubProcessSearchCriteria


  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteSummaryRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company


  # findWithCompany() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ContractRepository
  use Doctrine\ORM\EntityRepository
  use Ginq\Ginq
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ContractSearchCriteria


  # getAllDirectoryNames() 
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\BaseCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company

  - company 
      var Company

  # hasCompany() 
      return TODO array impl
  # getCompany() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\BusinessDaySearchCriteria
  package
  use Doctrine\ORM\QueryBuilder

  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - year 
  - month 
  - paramArray 

  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl
  # convertYearMonth() 年月の指定を日付範囲へ変換する
  # getParamArray() 
      return TODO array impl
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # setMonth() 
      param TODO array impl
  # getMonth() 
      return TODO array impl
  # hasMonth() 
      return TODO array impl
  # setYear() 
      param TODO array impl
  # getYear() 
      return TODO array impl
  # hasYear() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteProcessSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ProcessType

  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - constructionSite 
      var ConstructionSite
  - ProcessType 
      var ProcessType

  # hasProcessType() 
      return TODO array impl
  # getProcessType() 
      return TODO array impl
  # setProcessType() 
      param TODO array impl
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Controller\Revenue\Selection
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\JissekiConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\JuchuzanConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\MiseiConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification
  use Xnni\ConstructionBundle\Domain\Data\Staff
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup
  use Xnni\ConstructionBundle\Form\Entity\PrimeContractorGroup

  - contractDateStart 
      var \DateTime
  - contractDateEnd 
      var \DateTime
  - startDateStart 
      var \DateTime
  - startDateEnd 
      var \DateTime
  - endDateStart 
      var \DateTime
  - endDateEnd 
      var \DateTime
  - dateStart 
  - dateEnd 
  - primeContractor 
      var PrimeContractor
  - constructionType 
      var string
  - orderStatus 
      var string
  - keyword 
      var string
  - keyword2 
      var string
  - Staff 
      var Staff
  - StaffGroup 
      var StaffGroup
  - PrimeContractorGroup 
      var PrimeContractorGroup
  - billCode 
  - specs 
      var Specification[]
  - selection 
      var Selection

  # __construct() コンストラクタ
  # addSpec() 
      param TODO array impl
  # getEndDateEnd() 
      return TODO array impl
  # setEndDateEnd() 
      param TODO array impl
  # getEndDateStart() 
      return TODO array impl
  # setEndDateStart() 
      param TODO array impl
  # getStartDateEnd() 
      return TODO array impl
  # setStartDateEnd() 
      param TODO array impl
  # getStartDateStart() 
      return TODO array impl
  # setStartDateStart() 
      param TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl
  # hasConstructionType() 
      return TODO array impl
  # getConstructionType() 
      return TODO array impl
  # setConstructionType() 
      param TODO array impl
  # hasPrimeContractor() 
      return TODO array impl
  # getPrimeContractor() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
  # hasContractDateStart() 
      return TODO array impl
  # hasStartDateStart() 
      return TODO array impl
  # hasStartDateEnd() 
      return TODO array impl
  # hasEndDateStart() 
      return TODO array impl
  # hasEndDateEnd() 
      return TODO array impl
  # getContractDateStart() 
      return TODO array impl
  # setContractDateStart() 
      param TODO array impl
  # hasContractDateEnd() 
      return TODO array impl
  # getContractDateEnd() 
      return TODO array impl
  # setContractDateEnd() 
      param TODO array impl
  # setOrderStatus() 
      param TODO array impl
  # getOrderStatus() 
      return TODO array impl
  # hasOrderStatus() 
      return TODO array impl
  # setKeyword() 
      param TODO array impl
  # getKeyword() 
      return TODO array impl
  # hasKeyword() 
      return TODO array impl
  # hasDateStart() 
      return TODO array impl
  # getDateStart() 
      return TODO array impl
  # setDateStart() 
      param TODO array impl
  # hasDateEnd() 
      return TODO array impl
  # getDateEnd() 
      return TODO array impl
  # setDateEnd() 
      param TODO array impl
  # getPrimeContractorGroup() 
      return TODO array impl
  # setPrimeContractorGroup() 
      param TODO array impl
  # hasPrimeContractorGroup() 
      return TODO array impl
  # getStaffGroup() 
      return TODO array impl
  # setStaffGroup() 
      param TODO array impl
  # hasStaffGroup() 
      return TODO array impl
  # getKeyword2() 
      return TODO array impl
  # setKeyword2() 
      param TODO array impl
  # hasKeyword2() 
      return TODO array impl
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # hasStaff() 
      return TODO array impl
  # getBillCode() 
      return TODO array impl
  # setBillCode() 
      param TODO array impl
  # hasBillCode() 
      return TODO array impl
  # setSelection() 

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSubProcessSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ProcessType

  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - constructionSite 
      var ConstructionSite
  - ProcessType 
      var ProcessType

  # hasProcessType() 
      return TODO array impl
  # getProcessType() 
      return TODO array impl
  # setProcessType() 
      param TODO array impl
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSummarySearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\JissekiConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\JuchuzanConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\MiseiConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification

  - contractDateStart 
      var \DateTime
  - contractDateEnd 
      var \DateTime
  - startDateStart 
      var \DateTime
  - startDateEnd 
      var \DateTime
  - endDateStart 
      var \DateTime
  - endDateEnd 
      var \DateTime
  - dateStart 
  - dateEnd 
  - primeContractor 
      var PrimeContractor
  - constructionType 
      var string
  - orderStatus 
      var string
  - specs 
      var Specification[]

  # __construct() コンストラクタ
  # addSpec() 
      param TODO array impl
  # getEndDateEnd() 
      return TODO array impl
  # setEndDateEnd() 
      param TODO array impl
  # getEndDateStart() 
      return TODO array impl
  # setEndDateStart() 
      param TODO array impl
  # getStartDateEnd() 
      return TODO array impl
  # setStartDateEnd() 
      param TODO array impl
  # getStartDateStart() 
      return TODO array impl
  # setStartDateStart() 
      param TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl
  # hasConstructionType() 
      return TODO array impl
  # getConstructionType() 
      return TODO array impl
  # setConstructionType() 
      param TODO array impl
  # hasPrimeContractor() 
      return TODO array impl
  # getPrimeContractor() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
  # hasContractDateStart() 
      return TODO array impl
  # hasStartDateStart() 
      return TODO array impl
  # hasStartDateEnd() 
      return TODO array impl
  # hasEndDateStart() 
      return TODO array impl
  # hasEndDateEnd() 
      return TODO array impl
  # getContractDateStart() 
      return TODO array impl
  # setContractDateStart() 
      param TODO array impl
  # hasContractDateEnd() 
      return TODO array impl
  # getContractDateEnd() 
      return TODO array impl
  # setContractDateEnd() 
      param TODO array impl
  # setOrderStatus() 
      param TODO array impl
  # getOrderStatus() 
      return TODO array impl
  # hasOrderStatus() 
      return TODO array impl
  # hasDateStart() 
      return TODO array impl
  # getDateStart() 
      return TODO array impl
  # setDateStart() 
      param TODO array impl
  # hasDateEnd() 
      return TODO array impl
  # getDateEnd() 
      return TODO array impl
  # setDateEnd() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ContractSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder


  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\Criteria
  package
  use Doctrine\ORM\QueryBuilder

  - defaultRootAlias 
      var string

  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  package
  use Symfony\Component\Validator\Constraints
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Staff

  - constructionSite 
      var ConstructionSite
  - staff 
      var Staff
  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - company 
      var Company
  - PrimeContractor 

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # getConstructionSite() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getStaff() 
      return TODO array impl
  # hasStaff() 
      return TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # setTargetDateEnd() 
      param TODO array impl
  # hasPrimeContractor() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
  # getPrimeContractor() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ExpenseSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Form\Entity\Supplier

  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - company 
      var Company
  - constructionSite 
      var ConstructionSite
  - supplier 
      var Supplier
  - PrimeContractor 
  - paramArray 

  # getParamArray() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl
  # hasPrimeContractor() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
  # getPrimeContractor() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\MaterialSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company

  - company 
      var Company
  - name 
      var string
  - code 
      var string

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # setCode() 
      param TODO array impl
  # getCode() 
      return TODO array impl
  # hasCode() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # hasName() 
      return TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourceeSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor

  - company 
      var Company

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourcingSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Outsourcee
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor

  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - company 
      var Company
  - constructionSite 
      var ConstructionSite
  - PrimeContractor 
      var PrimeContractor
  - Outsourcee 
      var Outsourcee
  - paramArray 

  # getParamArray() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl
  # hasPrimeContractor() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
  # getPrimeContractor() 
      return TODO array impl
  # hasOutsourcee() 
      return TODO array impl
  # setOutsourcee() 
      param TODO array impl
  # getOutsourcee() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PrimeContractorGroupSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractorGroup

  - status 
      var string

  # setStatus() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # hasStatus() 
      return TODO array impl
  # setNormalOnly() 通常ステータスのみに設定する
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PrimeContractorSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor

  - company 
      var Company

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ProcessSubTypeSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\ProcessType

  - ProcessType 
      var ProcessType

  # hasProcessType() 
      return TODO array impl
  # getProcessType() 
      return TODO array impl
  # setProcessType() 
      param TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ProcessTypeSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder


  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Symfony\Component\Validator\Constraints
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Form\Entity\Supplier

  - targetDateStart 
      var \DateTime
  - targetDateEnd 
      var \DateTime
  - company 
      var Company
  - constructionSite 
      var ConstructionSite
  - supplier 
      var Supplier
  - PrimeContractor 
  - paramArray 

  # getParamArray() 
      return TODO array impl
  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # setTargetDateEnd() 
      param TODO array impl
  # getTargetDateEnd() 
      return TODO array impl
  # hasTargetDateEnd() 
      return TODO array impl
  # setTargetDateStart() 
      param TODO array impl
  # getTargetDateStart() 
      return TODO array impl
  # hasTargetDateStart() 
      return TODO array impl
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # setSupplier() 
      param TODO array impl
  # getSupplier() 
      return TODO array impl
  # hasSupplier() 
      return TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl
  # hasPrimeContractor() 
      return TODO array impl
  # setPrimeContractor() 
      param TODO array impl
  # getPrimeContractor() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ReceiptSearchCriteria
  package
  use Symfony\Component\Validator\Constraints
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite

  - constructionSite 
      var ConstructionSite
  - company 
      var Company

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # hasConstructionSite() 
      return TODO array impl
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\StaffGroupSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup

  - company 
      var Company
  - status 
      var string

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # hasStatus() 
      return TODO array impl
  # setNormalOnly() 通常ステータスのみに設定する
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\StaffSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Staff

  - company 
      var Company
  - status 
      var string

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # setStatus() 
      param TODO array impl
  # getStatus() 
      return TODO array impl
  # hasStatus() 
      return TODO array impl
  # setNormalOnly() 通常ステータスのスタッフのみに設定する
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\SupplierSearchCriteria
  package
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor

  - company 
      var Company

  # setCompany() 
      param TODO array impl
  # getCompany() 
      return TODO array impl
  # hasCompany() 
      return TODO array impl
  # __construct() コンストラクタ
  # merge() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\DailyReportRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria


  # delete() 
      param TODO array impl
  # findAll() 
      return TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # findOverlapped() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ExpenseRepository
  use Doctrine\DBAL\Query\QueryBuilder
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Ginq
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ExpenseSearchCriteria


  # delete() 
      param TODO array impl
  # findAll() 
      return TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # calculateTotal() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\FeeReceiptRepository
  use Doctrine\ORM\EntityRepository
  use Xnni\ConstructionBundle\Domain\Data\FeeReceipt


  # delete() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\LoginUserRepository
  use Doctrine\ORM\EntityRepository
  use Symfony\Component\Security\Core\Exception\UnsupportedUserException
  use Symfony\Component\Security\Core\Exception\UsernameNotFoundException
  use Symfony\Component\Security\Core\User\UserInterface
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Ginq\Ginq
  use Xnni\ConstructionBundle\Domain\Data\LoginUser


  # countFor() 
      param TODO array impl
      return TODO array impl
  # getAllUsernamesByContract() 
      param TODO array impl
      return TODO array impl
  # delete() 
      param TODO array impl
  # loadUserByUsernameAndCompanyDir() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl
  # refreshUser() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl
  # supportsClass() 
      param TODO array impl
      return TODO array impl
  # loadUserByUsername() 
      param TODO array impl
      throws TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\MaterialRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Material
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\MaterialSearchCriteria


  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\OutsourceeRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourceeSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Outsourcee


  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\OutsourcingRepository
  use Doctrine\DBAL\Query\QueryBuilder
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Ginq
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourcingSearchCriteria


  # delete() 
      param TODO array impl
  # findAll() 
      return TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # calculateTotal() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorGroupRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PrimeContractorGroupSearchCriteria


  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # delete() 
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PrimeContractorSearchCriteria


  # add() 
      param TODO array impl
  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ProcessSubTypeRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\ProcessSubTypeFactory
  use Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ProcessSubTypeSearchCriteria

  - factory 
      var ProcessSubTypeFactory

  # setFactory() 
      param TODO array impl
  # findOrCreate() 
      param TODO array impl
      return TODO array impl
  # add() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByNameWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ProcessTypeRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\ProcessTypeFactory
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ProcessTypeSearchCriteria

  - factory 
      var ProcessTypeFactory

  # setFactory() 
      param TODO array impl
  # findOrCreate() 
      param TODO array impl
      return TODO array impl
  # add() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByNameWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # findByName() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\PurchaseRepository
  use Doctrine\DBAL\Query\QueryBuilder
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Ginq
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria


  # delete() 
      param TODO array impl
  # findAll() 
      return TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl
  # calculateTotal() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\ReceiptRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Receipt
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ReceiptSearchCriteria


  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\StaffGroupRelationRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup


  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # delete() 
  # findCurrentMemberForGroup() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\StaffGroupRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\StaffGroupSearchCriteria


  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\StaffRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\StaffSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Staff


  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\SupplierRepository
  use Doctrine\ORM\EntityRepository
  use Doctrine\ORM\Query
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\SupplierSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Supplier


  # delete() 
      param TODO array impl
  # findWithCompany() 
      param TODO array impl
      return TODO array impl
  # findByCriteria() 
      param TODO array impl
      return TODO array impl
  # queryByCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Repository\UserProviderInterface
  package
  use Symfony\Component\Security\Core\User\UserProviderInterface


  # loadUserByUsernameAndCompanyDir() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\AccountLimit
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\BackendBundle\Form\Entity\LoginUser
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Data\Repository\ContractRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\LoginUserRepository
  use Ginq\Ginq

  - loginUserRepository 
      var LoginUserRepository

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # addable() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\Bill\OverReceiptBill
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # color() 
  # __toString() 

Xnni\ConstructionBundle\Domain\Data\Specification\Bill\ShortReceiptBill
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # color() 
  # __toString() 

Xnni\ConstructionBundle\Domain\Data\Specification\Bill\UnfinishedBill
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\CanceledContract
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Data\Contract


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\FinishedConstructionSite
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\JissekiConstructionSite
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # mergeSearchExpression() 

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\JuchuzanConstructionSite
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # mergeSearchExpression() 

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\MiseiConstructionSite
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # mergeSearchExpression() 

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\NotComplete
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\PreOrderConstructionSite
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\UnfinishedConstructionSite
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\DailyReport\NoOverlap
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\DailyReportRepository
  use Ginq\Ginq
  use Xnni\ConstructionBundle\Domain\Data\Specification\Specification

  - repository 
      var DailyReportRepository

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\FinishedBill
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\RedBill
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - clock 
      var Clock

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # color() 

Xnni\ConstructionBundle\Domain\Data\Specification\Specification
  package
  use Doctrine\ORM\QueryBuilder


  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\UnexpiredContract
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Doctrine\ORM\QueryBuilder
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - clock 
      var Clock

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\UniqueDirectoryName
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Data\Repository\ContractRepository
  use Ginq\Ginq

  - contractRepository 
      var ContractRepository

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\UniqueLoginUsername
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\LoginUser
  use Xnni\ConstructionBundle\Domain\Data\Repository\LoginUserRepository
  use Ginq\Ginq

  - loginUserRepository 
      var LoginUserRepository

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Specification\YellowBill
  package
  DI\Service
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - clock 
      var Clock

  # isSatisfiedBy() 
      param TODO array impl
      return TODO array impl
  # mergeQuery() 
      param TODO array impl
      return TODO array impl
  # color() 

Xnni\ConstructionBundle\Form\Entity\Staff
  package
  use Symfony\Component\Validator\Constraints

  - name 
      var string
  - hourlyPay 
      var int
  - hourlyPay2 
      var int
  - hourlyPay3 
      var int
  - StaffGroup 
      var StaffGroup

  # getHourlyPay() 
      return TODO array impl
  # setHourlyPay() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # setStaffGroup() 
      param TODO array impl
  # getStaffGroup() 
      return TODO array impl
  # setHourlyPay2() 
      param TODO array impl
  # getHourlyPay2() 
      return TODO array impl
  # setHourlyPay3() 
      param TODO array impl
  # getHourlyPay3() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\StaffGroup
  package
  use Symfony\Component\Validator\Constraints

  - name 
      var string
  - code 
      var string

  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # setCode() 
      param TODO array impl
  # getCode() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\StaffGroupRelation
  ORM\Entity
  ORM\Table
  use Doctrine\ORM\Mapping

  - id 
      ORM\Id TODO array impl
      ORM\Column TODO array impl
      ORM\GeneratedValue TODO array impl
  - Staff 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - StaffGroup 
      ORM\ManyToOne TODO array impl
      ORM\JoinColumn TODO array impl
  - startDate 
      var \DateTime
  - endDate 
      var \DateTime
  - updatedAt 
      ORM\Column TODO array impl
  - createdAt 
      ORM\Column TODO array impl

  # __construct() コンストラクタ
  # getId() 
      return TODO array impl
  # setId() 
      param TODO array impl
  # setStaff() 
      param TODO array impl
  # getStaff() 
      return TODO array impl
  # setStaffGroup() 
      param TODO array impl
  # getStaffGroup() 
      return TODO array impl
  # setStartDate() 
      param TODO array impl
  # getStartDate() 
      return TODO array impl
  # getEndDate() 
      return TODO array impl
  # setEndDate() 
      param TODO array impl
  # getUpdatedAt() 
      return TODO array impl
  # setUpdatedAt() 
      param TODO array impl
      return TODO array impl
  # getCreatedAt() 
      return TODO array impl
  # setCreatedAt() 
      param TODO array impl
      return TODO array impl
  # copyFrom() 
      param TODO array impl
  # equalTo() 
  # __toString() 
      return TODO array impl
  # serialize() シリアライズ
  # unserialize() アンシリアライズ

Xnni\ConstructionBundle\Domain\Data\Summary\ConstructionSiteSummary
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\CostCalculation

  - costCalculation 
      var CostCalculation

  # get() 
  # arrangeBillAndReceiptList() 

Xnni\ConstructionBundle\Domain\Data\Summary\DailyReportForConstructionSite
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Staff


  # staffList() 
  # getSumForStaffAndYM() 
  # getSumForStaffAndYM2() 
  # getSumForYM2() 

Xnni\ConstructionBundle\Domain\Data\Summary\DailyReportSummary
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\DailyReportRepository

  - repository 
      var DailyReportRepository

  # byCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Summary\ExpenseSummary
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteFactory
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ExpenseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\ExpenseRepository

  - repository 
      var ExpenseRepository
  - constructionSiteFactory 
      var ConstructionSiteFactory

  # byCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Summary\JuchuSummary
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\Criteria

  - repository 
      var ConstructionSiteRepository

  # byCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Summary\OutsourcingSummary
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Factory\SupplierFactory
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourcingSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\OutsourcingRepository

  - repository 
      var OutsourcingRepository
  - outsourceeFactory 
      var OutsourceeFactory

  # byCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Data\Summary\PurchaseSummary
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Factory\SupplierFactory
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PurchaseRepository

  - repository 
      var PurchaseRepository
  - supplierFactory 
      var SupplierFactory

  # byCriteria() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\Supplier
  package
  use Symfony\Component\Validator\Constraints

  - staffName 
      var string
  - tel 
      var string
  - address 
      var string
  - name 
      var string

  # getAddress() 
      return TODO array impl
  # setAddress() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # setName() 
      param TODO array impl
  # getStaffName() 
      return TODO array impl
  # setStaffName() 
      param TODO array impl
  # getTel() 
      return TODO array impl
  # setTel() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Data\Tax

  - RATE 

  # getRate() 
  # calc() 
  # calcWithTax() 

Xnni\ConstructionBundle\Domain\Service\ActivityLogService
  package
  use Doctrine\Common\Persistence\ObjectManager
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use Ginq\Ginq
  use Symfony\Component\HttpFoundation\Request
  use Xnni\ConstructionBundle\Domain\Data\ActivityLog
  use Xnni\ConstructionBundle\Domain\Data\Contract

  - entityManager 
      var EntityManager
  - request 
      var Request

  # log() 
      param TODO array impl
  # setEntityManager() 
      param TODO array impl
  # setRequest() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - clock 
      var Clock

  # getYearRange() 
      return TODO array impl
  # getStartOfYearRange() 
      return TODO array impl
  # getEndOfYearRange() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Service\ConstructionSite\CostCalculation
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - clock 
      var Clock

  # calcTerm() 
      param TODO array impl
      return TODO array impl
  # getMonthIterator() 
      param TODO array impl
      return TODO array impl
  # totalOfFixedCost() 
      param TODO array impl
      return TODO array impl
  # totalOfReceived() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Service\Contract\StartContract
  package
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\Validator\ConstraintViolationInterface
  use Symfony\Component\Validator\ConstraintViolationListInterface
  use Symfony\Component\Validator\Validator
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Data\Factory\CompanyFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\ContractFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\LoginUserFactory
  use Xnni\ConstructionBundle\Domain\Service\LoginUserService

  - companyFactory 
      var CompanyFactory
  - loginUserService 
      var LoginUserService
  - contractFactory 
      var ContractFactory
  - objectManager 
      var ObjectManager
  - validator 
      var Validator

  # __construct() 
      param TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Service\DailyReport\LineTotalCalculation
  package
  DI\Service
  use Ginq\Ginq
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\BusinessDay
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Data\Repository\BusinessDayRepository
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - clock 
      var Clock
  - businessDayRepository 
      var BusinessDayRepository

  # calc() 日報の日給を計算する     *     * 休日：時給３     * 平日：8:00〜17:00  時給１     * 平日上記以外  時給２

Xnni\ConstructionBundle\Domain\Service\File\ContractLogo
  DI\Service
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Filesystem\Filesystem
  use Symfony\Component\Finder\Finder
  use Xnni\ConstructionBundle\Domain\Data\Contract

  - kernelRootDir 
      DI\Inject TODO array impl
  - filesystem 
      var Filesystem

  # find() 
      param TODO array impl
      return TODO array impl
  # getFileNameBase() 
      param TODO array impl
      return TODO array impl
  # getFileName() 
      param TODO array impl
      return TODO array impl
  # getUploadDir() 
      return TODO array impl
  # cleanUp() 
      param TODO array impl

Xnni\ConstructionBundle\Domain\Service\Ledger\AddPrimeContractor
  package
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\Validator\ValidatorInterface
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\PrimeContractorFactory
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository

  - objectManager 
      var ObjectManager
  - validator 
      var Validator
  - primeContractorFactory 
      var PrimeContractorFactory
  - primeContractorRepository 
      var PrimeContractorRepository

  # __construct() 
      param TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Service\Ledger\AddStaffToGroup
  package
  DI\Service
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Factory\StaffGroupRelationFactory
  use Xnni\ConstructionBundle\Domain\Data\Staff
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup

  - entityManager 
      var EntityManager
  - staffGroupRelationFactory 
      var StaffGroupRelationFactory

  # run() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Service\LoginUserService
  package
  DI\Service
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\Security\Core\Encoder\EncoderFactory
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Factory\LoginUserFactory
  use Xnni\ConstructionBundle\Domain\Data\LoginUser

  - loginUserFactory 
      var LoginUserFactory
  - objectManager 
      var ObjectManager
  - encoderFactory 
      var EncoderFactory

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # makeAdminUser() 
      param TODO array impl
      return TODO array impl
  # makeNormalUser() 
      param TODO array impl
      return TODO array impl
  # makeBackendUser() 
      param TODO array impl
      return TODO array impl
  # encodePassword() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Domain\Util\Clock
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation


  # getCurrentDate() 
      return TODO array impl

Xnni\ConstructionBundle\Domain\Util\ColorMapper
  package
  DI\Service
  use JMS\DiExtraBundle\Annotation

  - table 
  - currentTable 
  - mapping 

  # __construct() コンストラクタ
  # pickName() 
      param TODO array impl
      return TODO array impl
  # pickRGB() 
      param TODO array impl
      return TODO array impl
  # _pick() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\EventListener\RequestListener
  package
  DI\Service
  DI\Tag
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Symfony\Component\HttpFoundation\RedirectResponse
  use Symfony\Component\HttpKernel\Event\GetResponseEvent
  use Symfony\Component\HttpKernel\HttpKernel
  use Symfony\Component\Routing\RouterInterface
  use Symfony\Component\Security\Core\SecurityContextInterface

  - serviceContainer 
      var ContainerInterface
  - securityContext 
      var SecurityContextInterface
  - router 
      var RouterInterface

  # onKernelRequest() 
      param TODO array impl

Xnni\ConstructionBundle\Exception\InvalidOperationException
  package



Xnni\ConstructionBundle\Form\DataTransformer\DateTextViewTransformer
  use Symfony\Component\Form\DataTransformerInterface
  use Stringy\StaticStringy


  # transform() 
      param TODO array impl
      return TODO array impl
  # reverseTransform() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer
  use Symfony\Component\Form\DataTransformerInterface


  # transform() 
  # reverseTransform() 

Xnni\ConstructionBundle\Form\DataTransformer\TimeTextViewTransformer
  use Symfony\Component\Form\DataTransformerInterface
  use Stringy\StaticStringy


  # transform() 
      param TODO array impl
      return TODO array impl
  # reverseTransform() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\ConstructionSiteAdditionalBill
  package
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite

  - billNumber 
  - billAmount 

  # __construct() 
  # getBillAmount() 
      return TODO array impl
  # setBillAmount() 
      param TODO array impl
  # getBillNumber() 
      return TODO array impl
  # setBillNumber() 
      param TODO array impl
  # __toString() 

Xnni\ConstructionBundle\Form\Entity\ConstructionSiteBill
  package
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite

  - billNumber1 
  - billAmount1 
  - billNumber2 
  - billAmount2 
  - billNumber3 
  - billAmount3 

  # __construct() 
  # getBillAmount1() 
      return TODO array impl
  # setBillAmount1() 
      param TODO array impl
  # getBillAmount2() 
      return TODO array impl
  # setBillAmount2() 
      param TODO array impl
  # getBillAmount3() 
      return TODO array impl
  # setBillAmount3() 
      param TODO array impl
  # getBillNumber1() 
      return TODO array impl
  # setBillNumber1() 
      param TODO array impl
  # getBillNumber2() 
      return TODO array impl
  # setBillNumber2() 
      param TODO array impl
  # getBillNumber3() 
      return TODO array impl
  # setBillNumber3() 
      param TODO array impl
  # __toString() 

Xnni\ConstructionBundle\Form\Entity\ConstructionSiteReceipt
  package
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Receipt

  - receiptDateBase1 
  - receiptDateBase2 
  - receiptDateBase3 
  - receiptDateAdd1 
  - receiptDateAdd2 
  - receiptDateAdd3 
  - receiptDateAdd4 
  - receiptDateAdd5 

  # __construct() 
  # getReceiptDateAdd1() 
      return TODO array impl
  # setReceiptDateAdd1() 
      param TODO array impl
  # getReceiptDateAdd2() 
      return TODO array impl
  # setReceiptDateAdd2() 
      param TODO array impl
  # getReceiptDateAdd3() 
      return TODO array impl
  # setReceiptDateAdd3() 
      param TODO array impl
  # getReceiptDateAdd4() 
      return TODO array impl
  # setReceiptDateAdd4() 
      param TODO array impl
  # getReceiptDateAdd5() 
      return TODO array impl
  # setReceiptDateAdd5() 
      param TODO array impl
  # getReceiptDateBase1() 
      return TODO array impl
  # setReceiptDateBase1() 
      param TODO array impl
  # getReceiptDateBase2() 
      return TODO array impl
  # setReceiptDateBase2() 
      param TODO array impl
  # getReceiptDateBase3() 
      return TODO array impl
  # setReceiptDateBase3() 
      param TODO array impl
  # __toString() 

Xnni\ConstructionBundle\Form\Entity\DailyReportList
  package
  Assert\Callback
  Assert\GroupSequence
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\DailyReport

  - targetDate 
  - staff 
  - dailyReports 
      var ArrayCollection

  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getDailyReports() 
      return TODO array impl
  # addDailyReport() 
      param TODO array impl
  # removeDailyReport() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\DailyReportList2
  package
  Assert\Callback
  Assert\GroupSequence
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\DailyReport

  - staff 
  - dailyReports 
      var ArrayCollection

  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getDailyReports() 
      return TODO array impl
  # addDailyReport() 
      param TODO array impl
  # removeDailyReport() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\DailyReportList3
  package
  Assert\Callback
  Assert\GroupSequence
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\DailyReport

  - ConstructionSite 
      var ConstructionSite
  - dailyReports 
      var ArrayCollection

  # __construct() コンストラクタ
  # setConstructionSite() 
      param TODO array impl
      return TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # getDailyReports() 
      return TODO array impl
  # addDailyReport() 
      param TODO array impl
  # removeDailyReport() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\ExpenseList
  package
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Expense

  - targetDate 
  - staff 
  - expenses 
      var ArrayCollection
  - expenseType 

  # setExpenseType() 
      param TODO array impl
  # getExpenseType() 
      return TODO array impl
  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getExpenses() 
      return TODO array impl
  # addExpense() 
      param TODO array impl
  # removeExpense() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\ExpenseList2
  package
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Expense

  - ConstructionSite 
      var ConstructionSite
  - targetDate 
  - staff 
  - expenses 
      var ArrayCollection
  - expenseType 

  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setExpenseType() 
      param TODO array impl
  # getExpenseType() 
      return TODO array impl
  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getExpenses() 
      return TODO array impl
  # addExpense() 
      param TODO array impl
  # removeExpense() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\OutsourcingList
  package
  Assert\Callback
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Outsourcee

  - targetDate 
  - staff 
  - outsourcings 
      var ArrayCollection
  - outsourcee 
      var Outsourcee
  - outsourceFromOther 
      var string
  - outsourcingType 

  # setOutsourcingType() 
      param TODO array impl
  # getOutsourcingType() 
      return TODO array impl
  # setOutsourcee() 
      param TODO array impl
  # getOutsourcee() 
      return TODO array impl
  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getOutsourcings() 
      return TODO array impl
  # addOutsourcing() 
      param TODO array impl
  # removeOutsourcing() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # setOutsourceFromOther() 
      param TODO array impl
  # getOutsourceFromOther() 
      return TODO array impl
  # validateOutsourcee() 
      param TODO array impl

Xnni\ConstructionBundle\Form\Entity\OutsourcingList2
  package
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Outsourcee

  - ConstructionSite 
      var ConstructionSite
  - targetDate 
  - staff 
  - outsourcings 
      var ArrayCollection
  - outsourcee 
      var Outsourcee
  - outsourceFromOther 
      var string
  - outsourcingType 

  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setOutsourcingType() 
      param TODO array impl
  # getOutsourcingType() 
      return TODO array impl
  # setOutsourcee() 
      param TODO array impl
  # getOutsourcee() 
      return TODO array impl
  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getOutsourcings() 
      return TODO array impl
  # addOutsourcing() 
      param TODO array impl
  # removeOutsourcing() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # setOutsourceFromOther() 
      param TODO array impl
  # getOutsourceFromOther() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Entity\PurchaseList
  package
  Assert\Callback
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Supplier

  - targetDate 
  - staff 
  - purchases 
      var ArrayCollection
  - supplier 
      var Supplier
  - supplyFromOther 
      var string
  - purchaseType 
  - zaikohinFlag 

  # setPurchaseType() 
      param TODO array impl
  # getPurchaseType() 
      return TODO array impl
  # setSupplier() 
      param TODO array impl
  # getSupplier() 
      return TODO array impl
  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getPurchases() 
      return TODO array impl
  # addPurchase() 
      param TODO array impl
  # removePurchase() 
      param TODO array impl
  # validate() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # setSupplyFromOther() 
      param TODO array impl
  # getSupplyFromOther() 
      return TODO array impl
  # setZaikohinFlag() 
      param TODO array impl
  # getZaikohinFlag() 
      return TODO array impl
  # validateSupplier() 
      param TODO array impl

Xnni\ConstructionBundle\Form\Entity\PurchaseList2
  package
  use Symfony\Component\Validator\Constraints
  use Doctrine\Common\Collections\ArrayCollection
  use Symfony\Component\Validator\ExecutionContextInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Supplier

  - ConstructionSite 
      var ConstructionSite
  - targetDate 
  - staff 
  - purchases 
      var ArrayCollection
  - supplier 
      var Supplier
  - supplyFromOther 
      var string
  - purchaseType 
  - zaikohinFlag 

  # setConstructionSite() 
      param TODO array impl
  # getConstructionSite() 
      return TODO array impl
  # setPurchaseType() 
      param TODO array impl
  # getPurchaseType() 
      return TODO array impl
  # setSupplier() 
      param TODO array impl
  # getSupplier() 
      return TODO array impl
  # __construct() コンストラクタ
  # getStaff() 
      return TODO array impl
  # setStaff() 
      param TODO array impl
  # getTargetDate() 
      return TODO array impl
  # setTargetDate() 
      param TODO array impl
  # getPurchases() 
      return TODO array impl
  # addPurchase() 
      param TODO array impl
  # removePurchase() 
      param TODO array impl
  # __toString() 
      return TODO array impl
  # setSupplyFromOther() 
      param TODO array impl
  # getSupplyFromOther() 
      return TODO array impl
  # setZaikohinFlag() 
      param TODO array impl
  # getZaikohinFlag() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ConstructionSiteProcessType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\Form
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\Form\FormEvent
  use Symfony\Component\Form\FormEvents
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\SubProcess
  use Xnni\ConstructionBundle\Domain\Data\ProcessType
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar

  - currentData 
      var Process
  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ConstructionSiteSubProcessesType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Proxies\__CG__\Xnni\ConstructionBundle\Domain\Data\ProcessSubType
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\Form
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\Form\FormEvent
  use Symfony\Component\Form\FormEvents
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\SubProcess
  use Xnni\ConstructionBundle\Form\DataTransformer\DateTextViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ConstructionSiteType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\DataTransformer\CollectionToArrayTransformer
  use Symfony\Bridge\Doctrine\Form\EventListener\MergeDoctrineCollectionListener
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\FinishedConstructionSite

  - primeContractor 
  - constructionSiteRepository 
      var ConstructionSiteRepository
  - unfinishedConstructionSiteSpecification 
      var UnfinishedConstructionSite
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ConstructionSiteWithPrimeContractorType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite


  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\DailyReport2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Form\DataTransformer\DateTextViewTransformer
  use Xnni\ConstructionBundle\Form\DataTransformer\TimeTextViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\DailyReport3Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Form\DataTransformer\DateTextViewTransformer
  use Xnni\ConstructionBundle\Form\DataTransformer\TimeTextViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\DailyReportList2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\DailyReportList2

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\DailyReportList3Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\DailyReportList3

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\DailyReportListType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\DailyReportList

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\DailyReportType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\DailyReport


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\Expense2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ExpenseList2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\ExpenseList2

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ExpenseListType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\ExpenseList

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\ExpenseType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\OutsourceeType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourceeSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\OutsourceeRepository
  use Xnni\ConstructionBundle\Domain\Data\Outsourcee

  - outsourceeRepository 
      var OutsourceeRepository
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\Outsourcing2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\OutsourcingList2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\OutsourcingList2

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\OutsourcingListType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\OutsourcingList

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\OutsourcingType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\PrimeContractorGroupType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PrimeContractorGroupSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorGroupRepository
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractorGroup

  - primeContractorGroupRepository 
      var PrimeContractorGroupRepository
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\PrimeContractorType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PrimeContractorSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\PrimeContractorRepository

  - primeContractorRepository 
      var PrimeContractorRepository
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\Purchase2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\PurchaseList2Type
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\PurchaseList2

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\PurchaseListType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Service\BusinessCalendar
  use Xnni\ConstructionBundle\Form\Entity\PurchaseList

  - businessCalendar 
      var BusinessCalendar

  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\PurchaseType
  package
  DI\FormType
  use JMS\DiExtraBundle\Annotation
  use Symfony\Component\Form\AbstractType
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Form\DataTransformer\NumberViewTransformer


  # buildForm() 
      param TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\StaffGroupType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\StaffGroupSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\StaffGroupRepository
  use Xnni\ConstructionBundle\Domain\Data\StaffGroup

  - staffGroupRepository 
      var StaffGroupRepository
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\StaffType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\StaffSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Staff

  - staffRepository 
      var StaffRepository
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\SupplierType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\SupplierSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\SupplierRepository
  use Xnni\ConstructionBundle\Domain\Data\Supplier

  - supplierRepository 
      var SupplierRepository
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Form\Type\UnfinishedConstructionSiteType
  package
  DI\FormType
  use Doctrine\Common\Persistence\ManagerRegistry
  use JMS\DiExtraBundle\Annotation
  use Symfony\Bridge\Doctrine\Form\ChoiceList\EntityChoiceList
  use Symfony\Bridge\Doctrine\Form\DataTransformer\CollectionToArrayTransformer
  use Symfony\Bridge\Doctrine\Form\EventListener\MergeDoctrineCollectionListener
  use Symfony\Bridge\Doctrine\Form\Type\EntityType
  use Symfony\Component\Form\Exception\RuntimeException
  use Symfony\Component\Form\FormBuilderInterface
  use Symfony\Component\OptionsResolver\Options
  use Symfony\Component\OptionsResolver\OptionsResolverInterface
  use Symfony\Component\PropertyAccess\PropertyAccess
  use Symfony\Component\PropertyAccess\PropertyAccessorInterface
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Specification\ConstructionSite\FinishedConstructionSite

  - constructionSiteRepository 
      var ConstructionSiteRepository
  - unfinishedConstructionSiteSpecification 
      var UnfinishedConstructionSite
  - applicationContext 
      var ApplicationContext

  # __construct() 
      param TODO array impl
      DI\InjectParams TODO array impl
  # setDefaultOptions() 
      param TODO array impl
  # getName() 
      return TODO array impl
  # getChoices() 
      return TODO array impl

Xnni\ConstructionBundle\Report\ConstructionSitePDF
  package
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Receipt
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Summary\DailyReportForConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Tax
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\CostCalculation
  use Xnni\ConstructionBundle\UseCase\ConstructionSite\Detail
  use Xnni\ConstructionBundle\UseCase\UseCase

  - useCase 
      var Detail
  - constructionSite 
      var ConstructionSite
  - costCalcuration 
      var CostCalculation
  - dailyReportForConstructionSite 
      var DailyReportForConstructionSite
  - tax 
  - summary 
  - billAndReceiptList 
  - height 
  - fontName 

  # __construct() 
  # addLn() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 帳票本体の処理
  # buildSummaryLine() 粗利
  # buildCommentLines() 予定人工、予定人工内訳、コメント欄
  # buildJinkenhiList() 人件費明細
  # purchaseListHaeder() 
  # buildPurchaseList() 材料費明細
  # buildOutsourcingList() 外注費明細
  # buildExpenseList() その他経費明細
  # buildBillAndReceiptList() 請求入金明細

Xnni\ConstructionBundle\Report\DailyReportListPDF
  package
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  use Xnni\ConstructionBundle\UseCase\DailyReport\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - dailyReportSearchCriteria 
      var DailyReportSearchCriteria
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\ExpensePDF
  package
  use TCPDF_FONTS
  use TCPDF_STATIC
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ExpenseSearchCriteria
  use Xnni\ConstructionBundle\UseCase\Expense\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - expenseSearchCriteria 
      var ExpenseSearchCriteria
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\ExpenseSummaryPDF
  package
  use Xnni\ConstructionBundle\Domain\Data\Expense
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ExpenseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Tax
  use Xnni\ConstructionBundle\UseCase\Expense\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - expenseSearchCriteria 
      var ExpenseSearchCriteria
  - tax 
      var Tax
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\OutsourcingPDF
  package
  use TCPDF_FONTS
  use TCPDF_STATIC
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourcingSearchCriteria
  use Xnni\ConstructionBundle\UseCase\Outsourcing\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - outsourcingSearchCriteria 
      var OutsourcingSearchCriteria
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\OutsourcingSummaryPDF
  package
  use Xnni\ConstructionBundle\Domain\Data\Outsourcing
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\OutsourcingSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Tax
  use Xnni\ConstructionBundle\UseCase\Outsourcing\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - outsourcingSearchCriteria 
      var OutsourcingSearchCriteria
  - tax 
      var Tax
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\ProcessPDF
  package
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Tax
  use Xnni\ConstructionBundle\UseCase\ConstructionSiteProcess\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - useCase 
      var Search
  - cirteria 
      var ConstructionSiteSearchCriteria
  - processList 
      var ConstructionSite[]
  - fontName 

  # __construct() 
  # addLn() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 帳票本体の処理
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\PurchasePDF
  package
  use TCPDF_FONTS
  use TCPDF_STATIC
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  use Xnni\ConstructionBundle\UseCase\Purchase\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - purchaseSearchCriteria 
      var PurchaseSearchCriteria
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\PurchaseSummaryPDF
  package
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\PurchaseSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Tax
  use Xnni\ConstructionBundle\UseCase\Purchase\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - backgroundImage 
  - useCase 
      var Search
  - purchaseSearchCriteria 
      var PurchaseSearchCriteria
  - tax 
      var Tax
  - fontName 

  # __construct() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Report\ReportPDF
  package
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\PrintInfo
  use Xnni\ConstructionBundle\UseCase\UseCase

  - useCase 
  - constructionSite 
      var ConstructionSite
  - startDate 
  - endDate 
  - backgroundImage 
  - colorMapper 
  - height 
  - printInfo 
  - fontName 

  # __construct() 
  # addLn() 横幅190mm（左右10mmずつマージンがある）
  # Header() ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 
      param TODO array impl
  # buildFoot() 

Xnni\ConstructionBundle\Report\RevenuePDF
  package
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Tax
  use Xnni\ConstructionBundle\UseCase\Revenue\Search
  use Xnni\ConstructionBundle\UseCase\UseCase

  - useCase 
      var Search
  - cirteria 
      var ConstructionSiteSearchCriteria
  - revenueList 
      var ConstructionSite[]
  - fontName 

  # __construct() 
  # addLn() 
  # Header() 横幅190mm（左右10mmずつマージンがある）ヘッダーの処理
  # Footer() フッターの処理
  # buildContent() 帳票本体の処理
  # buildLineHeader() 
  # buildLine() 

Xnni\ConstructionBundle\Resources\Fixture\LoadAdmin
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\FixtureInterface
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Data\Factory\CompanyFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\ContractFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\LoginUserFactory
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract
  use Xnni\ConstructionBundle\Domain\Service\LoginUserService
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadBill
  package
  use Doctrine\Common\Collections\ArrayCollection
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\FixtureInterface
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\BillBundle\Domain\Data\BillDetail
  use Xnni\ConstructionBundle\Domain\Data\FeeReceipt
  use Xnni\ConstructionBundle\Domain\Data\Receipt

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadConstructionSite
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Data\PrimeContractor
  use Xnni\ConstructionBundle\Domain\Data\Staff

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadContract
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\FixtureInterface
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\Contract
  use Xnni\ConstructionBundle\Domain\Data\Factory\CompanyFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\ContractFactory
  use Xnni\ConstructionBundle\Domain\Data\Factory\LoginUserFactory
  use Xnni\ConstructionBundle\Domain\Service\Contract\StartContract
  use Xnni\ConstructionBundle\Domain\Service\LoginUserService
  use Xnni\ConstructionBundle\Domain\Util\Clock

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadDailyReport
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\FixtureInterface
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\DailyReport

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadFeeReceipt
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\FixtureInterface
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\FeeReceipt

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadMaterial
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\Company

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadPrimeContractor
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadPrintInfo
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\StaffFactory
  use Xnni\ConstructionBundle\Domain\Data\PrintInfo
  use Xnni\ConstructionBundle\Domain\Data\Staff

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadStaff
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\StaffFactory
  use Xnni\ConstructionBundle\Domain\Data\Staff

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Resources\Fixture\LoadStaffGroup
  package
  use Doctrine\Common\DataFixtures\AbstractFixture
  use Doctrine\Common\DataFixtures\Doctrine
  use Doctrine\Common\DataFixtures\OrderedFixtureInterface
  use Doctrine\Common\Persistence\ObjectManager
  use Symfony\Component\DependencyInjection\ContainerAwareInterface
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Xnni\ConstructionBundle\Domain\Data\Company
  use Xnni\ConstructionBundle\Domain\Data\Factory\StaffGroupFactory
  use Xnni\ConstructionBundle\Domain\Data\Staffgroup

  - container 
      var ContainerInterface

  # setContainer() 
      param TODO array impl
  # load() 
      param TODO array impl
  # getOrder() 
      return TODO array impl

Xnni\ConstructionBundle\Routing\ContextParamConverter
  package
  DI\Service
  DI\Tag
  use JMS\DiExtraBundle\Annotation
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ConfigurationInterface
  use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter
  use Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter
  use Symfony\Component\HttpFoundation\Request
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Company

  - entityManager 
      var EntityManager
  - applicationContext 
      var ApplicationContext

  # find() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl
  # supports() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Routing\Router
  package
  use Symfony\Bundle\FrameworkBundle\Routing\Router
  use Symfony\Component\DependencyInjection\ContainerInterface
  use Symfony\Component\Routing\RequestContext
  use Symfony\Component\Security\Core\SecurityContextInterface

  - securityContext 
      var SecurityContextInterface

  # setSecurityContext() 
      param TODO array impl
  # generate() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Security\AuthenticationProvider
  package
  use Symfony\Bridge\Doctrine\ManagerRegistry
  use Symfony\Component\HttpFoundation\Request
  use Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider
  use Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken
  use Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface
  use Symfony\Component\Security\Core\Exception\AuthenticationServiceException
  use Symfony\Component\Security\Core\User\UserCheckerInterface
  use Symfony\Component\Security\Core\User\UserInterface
  use Symfony\Component\Security\Core\User\UserProviderInterface
  use Xnni\ConstructionBundle\Domain\Data\Repository\LoginUserRepository

  - encoderFactory 
  - userProvider 
  - registry 
      var ManagerRegistry
  - request 
      var Request

  # __construct() 
      param TODO array impl
  # retrieveUser() マッチするユーザーを検索する
  # setRequest() 
      param TODO array impl
  # getRequest() 
      return TODO array impl
  # setRegistry() 
      param TODO array impl

Xnni\ConstructionBundle\Security\AuthenticationSuccessHandler
  package
  use Symfony\Component\HttpFoundation\RedirectResponse
  use Symfony\Component\HttpFoundation\Request
  use Symfony\Component\HttpFoundation\Session\SessionInterface
  use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException
  use Symfony\Component\Routing\RouterInterface
  use Symfony\Component\Security\Core\Authentication\Token\TokenInterface
  use Symfony\Component\Security\Core\Exception\AccountExpiredException
  use Symfony\Component\Security\Core\SecurityContextInterface
  use Symfony\Component\Security\Core\User\User
  use Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler
  use Symfony\Component\Security\Http\HttpUtils
  use Xnni\ConstructionBundle\Domain\Data\LoginUser
  use Xnni\ConstructionBundle\Domain\Data\Specification\CanceledContract
  use Xnni\ConstructionBundle\Domain\Data\Specification\UnexpiredContract
  use Xnni\ConstructionBundle\Domain\Service\ActivityLogService

  - CanceledContract 
      var CanceledContract
  - UnexpiredContract 
      var UnexpiredContract
  - router 
      var RouterInterface
  - session 
      var SessionInterface
  - ActivityLogService 
      var ActivityLogService

  # __construct() 
      param TODO array impl
  # setRouter() 
      param TODO array impl
  # onAuthenticationSuccess() 
      param TODO array impl
      return TODO array impl
      throws TODO array impl
  # setCanceledContract() 
      param TODO array impl
  # getCanceledContract() 
      return TODO array impl
  # setUnexpiredContract() 
      param TODO array impl
  # getUnexpiredContract() 
      return TODO array impl
  # setSession() 
      param TODO array impl
  # getSession() 
      return TODO array impl
  # setActivityLogService() 
      param TODO array impl
  # getActivityLogService() 
      return TODO array impl

Xnni\ConstructionBundle\Tests\CommandTestCase
  use Symfony\Bundle\FrameworkBundle\Test\WebTestCase
  use Symfony\Bundle\FrameworkBundle\Console\Application
  use Symfony\Component\Console\Command\Command
  use Symfony\Component\Console\Tester\CommandTester
  use Phake

  - application 
      var Application

  # setUp() 
  # setSUT() 
  # runCommand() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Tests\TestBase
  use Prophecy\Prophet

  - prophet 
      var Prophet

  # setUp() 
  # tearDown() 
  # mock() 
      param TODO array impl
      return TODO array impl

Xnni\ConstructionBundle\Twig\ApplicationExtension
  package
  DI\Service
  DI\Tag
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Tax

  - applicationContext 
      var ApplicationContext

  # getGlobals() 
      return TODO array impl
  # getFilters() 
      return TODO array impl
  # getName() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Revenue\Search
  DI\Service
  package
  use Doctrine\ORM\Query
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Controller\Revenue\Selection
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\ConstructionSiteSearchCriteria
  use Xnni\ConstructionBundle\UseCase\UseCase

  - domainRepositoryObject 
      var ConstructionSiteRepository
  - selection 
      var Selection

  # __construct() コンストラクタ
  # prepare() 
      param TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSite\Detail
  DI\Service
  package
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\ConstructionSiteRepository
  use Xnni\ConstructionBundle\Domain\Data\Summary\ConstructionSiteSummary
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\CostCalculation
  use Xnni\ConstructionBundle\UseCase\UseCase

  - domainRepositoryObject 
      var ConstructionSiteRepository
  - costCalculation 
      var CostCalculation
  - summaryObject 
      var ConstructionSiteSummary
  - summary 

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSite\EditBudget
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Budget
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\CostCalculation
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\SummaryUpdatable
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - costCalculation 
      var CostCalculation

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
      SummaryUpdate TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSiteProcess\CompleteConstructionSite
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteProcessFactory
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - targetConstructionSite 
      var ConstructionSite

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSiteProcess\EditAdditionalBill
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteAdditionalBill
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - targetConstructionSite 
      var ConstructionSite
  - targetAdditionalNumber 
  - domainFactoryObject 
      var \Closure

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSiteProcess\EditBill
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteBill
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - targetConstructionSite 
      var ConstructionSite
  - domainFactoryObject 
      var \Closure

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSiteProcess\EditProcess
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite\Process
  use Xnni\ConstructionBundle\Domain\Data\Factory\ConstructionSiteProcessFactory
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - targetConstructionSite 
      var ConstructionSite
  - domainFactoryObject 
      var ConstructionSiteProcessFactory

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\ConstructionSiteProcess\EditReceipt
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\BillBundle\Domain\Data\Bill
  use Xnni\ConstructionBundle\Domain\Data\ConstructionSite
  use Xnni\ConstructionBundle\Domain\Data\Receipt
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteBill
  use Xnni\ConstructionBundle\Form\Entity\ConstructionSiteReceipt
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - targetConstructionSite 
      var ConstructionSite
  - domainFactoryObject 
      var \Closure
  - bill1 
  - bill2 
  - bill3 
  - billAdd1 
  - billAdd2 
  - billAdd3 
  - billAdd4 
  - billAdd5 

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Purchase\AddMulti2
  DI\Service
  package
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate
  use Xnni\ConstructionBundle\Domain\Data\Purchase
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\SummaryUpdatable
  use Xnni\ConstructionBundle\Form\Entity\PurchaseList2
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - domainFactoryObject 
      var \Closure

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
      SummaryUpdate TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\DailyReport\AddMulti3
  DI\Service
  package
  use Doctrine\ORM\EntityManager
  use JMS\DiExtraBundle\Annotation
  use InvalidArgumentException
  use Xnni\ConstructionBundle\Annotations\SummaryUpdate
  use Xnni\ConstructionBundle\Domain\Data\DailyReport
  use Xnni\ConstructionBundle\Domain\Service\ConstructionSite\SummaryUpdatable
  use Xnni\ConstructionBundle\Domain\Service\DailyReport\LineTotalCalculation
  use Xnni\ConstructionBundle\Form\Entity\DailyReportList3
  use Xnni\ConstructionBundle\UseCase\UseCase

  - entityManager 
      var EntityManager
  - domainFactoryObject 
      var \Closure
  - LineTotalCalc 
      var LineTotalCalculation

  # __construct() コンストラクタ
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
      SummaryUpdate TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\DailyReport\Table
  DI\Service
  package
  use Doctrine\ORM\Query
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\ApplicationContext
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\DailyReportSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Summary\DailyReportSummary
  use Xnni\ConstructionBundle\Domain\Util\ColorMapper
  use Xnni\ConstructionBundle\UseCase\UseCase

  - dailyReportSummary 
      var DailyReportSummary
  - colorMapper 
      var ColorMapper
  - applicationContext 
      var ApplicationContext

  # __construct() コンストラクタ
  # prepare() 
      param TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Material\SearchItem
  DI\Service
  package
  use Doctrine\ORM\Query
  use Doctrine\ORM\QueryBuilder
  use JMS\DiExtraBundle\Annotation
  use Xnni\ConstructionBundle\Domain\Data\Repository\Criteria\MaterialSearchCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\MaterialRepository
  use Xnni\ConstructionBundle\UseCase\UseCase

  - domainRepositoryObject 
      var MaterialRepository

  # __construct() コンストラクタ
  # prepare() 
      param TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\Receipt\Check
  DI\Service
  package
  use Doctrine\ORM\Query
  use JMS\DiExtraBundle\Annotation
  use Xnni\BillBundle\Domain\Data\Repository\BillRepository
  use Xnni\BillBundle\Domain\Data\Repository\Criteria\BillCriteria
  use Xnni\ConstructionBundle\Domain\Data\Repository\ReceiptRepository
  use Xnni\ConstructionBundle\UseCase\UseCase

  - domainRepositoryObject 
      var BillRepository
  - yellowBill 
      DI\Inject TODO array impl
  - redBill 
      DI\Inject TODO array impl
  - overReceiptBill 
      DI\Inject TODO array impl
  - shortReceiptBill 
      DI\Inject TODO array impl
  - unfinishedBill 
      DI\Inject TODO array impl

  # __construct() コンストラクタ
  # prepare() 
      param TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      return TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\UseCase\UseCase
  package
  use Doctrine\ORM\Query
  use JMS\DiExtraBundle\Annotation
  use Stringy\StaticStringy
  use Xnni\ConstructionBundle\ApplicationContext

  - applicationContext 
      var ApplicationContext
  - name 
      var string
  - namespace 
      var string
  - validationGroup 
      var string
  - entityName 
      var string
  - verb 
      var string
  - listDirection 
      var string
  - listPerPage 
      var int

  # getVerb() 
      return TODO array impl
  # getEntityName() 
      return TODO array impl
  # getEntityNameLowerCamel() 
      return TODO array impl
  # getValidationGroup() 
      return TODO array impl
  # getNamespace() 
      return TODO array impl
  # getName() 
      return TODO array impl
  # getListDirection() 
      return TODO array impl
  # prepare() 
      param TODO array impl
      throws TODO array impl
      return TODO array impl
  # run() 
      param TODO array impl
      throws TODO array impl
  # __toString() 
      return TODO array impl

Xnni\ConstructionBundle\XnniConstructionBundle
  package
  use Symfony\Component\HttpKernel\Bundle\Bundle


  # boot() バンドルの起動イベント

Xnni\GeneratorBundle\Command\GenerateCrudCommand
  use Stringy\Stringy
  use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Console\Helper\DialogHelper
  use Symfony\Component\Validator\Constraints
  use Symfony\Component\Yaml\Yaml
  use Stringy\StaticStringy
  use Xnni\GeneratorBundle\Generator\CrudUseCaseGenerator


  # configure() 
  # execute() 
  # preprocessConfig() 
  # preprocessConfigBody_bundle() 
      param TODO array impl
      return TODO array impl
  # preprocessConfigBody2() 
      param TODO array impl
      return TODO array impl
  # FQCNtoServiceName() 
      param TODO array impl
      return TODO array impl
  # FQCNtoRootName() 
  # FQCNtoClassName() 
      param TODO array impl
      return TODO array impl
  # preprocessRoots() 

Xnni\GeneratorBundle\DependencyInjection\XnniGeneratorExtension
  use Symfony\Component\DependencyInjection\ContainerBuilder
  use Symfony\Component\Config\FileLocator
  use Symfony\Component\HttpKernel\DependencyInjection\Extension
  use Symfony\Component\DependencyInjection\Loader


  # load() {@inheritDoc}

Xnni\GeneratorBundle\Generator\CrudUseCaseGenerator
  use Sensio\Bundle\GeneratorBundle\Generator\Generator
  use Symfony\Component\Filesystem\Filesystem
  use Symfony\Component\HttpKernel\Bundle\BundleInterface
  use Stringy\StaticStringy
  use Twig_Error_Loader

  - filesystem 
      var Filesystem

  # __construct() 
      param TODO array impl
  # generate() 
  # generateControllers() 
      param TODO array impl
  # generateTemplates() 
      param TODO array impl
  # generateUseCases() 
      param TODO array impl

Xnni\GeneratorBundle\XnniGeneratorBundle
  use Symfony\Component\HttpKernel\Bundle\Bundle



Xnni\MultiEditBundle\Config
  use Symfony\Component\Form\Extension\Core\Type\FormType
  use Xnni\MultiEditBundle\Model\Repository

  - repository 
      var Repository
  - parentForm 
      var FormType
  - childForm 
      var FormType

  # __construct() 
  # setChildForm() 
      param TODO array impl
  # getChildForm() 
      return TODO array impl
  # setParentForm() 
      param TODO array impl
  # getParentForm() 
      return TODO array impl
  # setRepository() 
      param TODO array impl
  # getRepository() 
      return TODO array impl

Xnni\MultiEditBundle\Controller\MultiEditController
  use Xnni\ConstructionBundle\Controller\UseCaseController



Xnni\MultiEditBundle\DependencyInjection\XnniMultiEditExtension
  use Symfony\Component\DependencyInjection\ContainerBuilder
  use Symfony\Component\Config\FileLocator
  use Symfony\Component\HttpKernel\DependencyInjection\Extension
  use Symfony\Component\DependencyInjection\Loader


  # load() {@inheritDoc}

Xnni\MultiEditBundle\Model\Repository



Xnni\MultiEditBundle\XnniMultiEditBundle
  use Symfony\Component\HttpKernel\Bundle\Bundle



Xnni\ReflectionBundle\Command\GenerateDocCommand
  use PhpParser\Lexer
  use PhpParser\NodeTraverser
  use PhpParser\Parser
  use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand
  use Symfony\Component\Console\Input\InputArgument
  use Symfony\Component\Console\Input\InputInterface
  use Symfony\Component\Console\Input\InputOption
  use Symfony\Component\Console\Output\OutputInterface
  use Symfony\Component\Finder\Finder
  use Symfony\Component\HttpKernel\Kernel
  use Xnni\ReflectionBundle\Printer\Pdf
  use Xnni\ReflectionBundle\Printer\PdfPrinter


  # getService() 
  # configure() 
  # execute() 

Xnni\ReflectionBundle\DependencyInjection\XnniReflectionExtension
  use Symfony\Component\DependencyInjection\ContainerBuilder
  use Symfony\Component\Config\FileLocator
  use Symfony\Component\HttpKernel\DependencyInjection\Extension
  use Symfony\Component\DependencyInjection\Loader


  # load() {@inheritDoc}

Xnni\ReflectionBundle\Printer\Pdf

  - fontName 

  # Header() 
  # Footer() 

Xnni\ReflectionBundle\Printer\PdfPrinter
  use PhpParser\PrettyPrinterAbstract
  use PhpParser\Node
  use PhpParser\Node\Scalar
  use PhpParser\Node\Scalar\MagicConst
  use PhpParser\Node\Expr
  use PhpParser\Node\Expr\AssignOp
  use PhpParser\Node\Expr\BinaryOp
  use PhpParser\Node\Expr\Cast
  use PhpParser\Node\Stmt
  use PhpParser\Node\Name

  - namespace 
  - comment 
  - number 
  - pdf 
      var Pdf

  # __construct() 
  # pStmt_Namespace() 
  # pStmt_Class() 
  # pStmt_ClassMethod() 
  # pStmts() 
  # pComments() 
  # getComment() 
  # pParam() / Special nodes
  # pArg() 
  # pConst() 
  # pName() / Names
  # pName_FullyQualified() 
  # pName_Relative() 
  # pScalar_MagicConst_Class() / Magic Constants
  # pScalar_MagicConst_Dir() 
  # pScalar_MagicConst_File() 
  # pScalar_MagicConst_Function() 
  # pScalar_MagicConst_Line() 
  # pScalar_MagicConst_Method() 
  # pScalar_MagicConst_Namespace() 
  # pScalar_MagicConst_Trait() 
  # pScalar_String() / Scalars
  # pScalar_Encapsed() 
  # pScalar_LNumber() 
  # pScalar_DNumber() 
  # pExpr_Assign() / Assignments
  # pExpr_AssignRef() 
  # pExpr_AssignOp_Plus() 
  # pExpr_AssignOp_Minus() 
  # pExpr_AssignOp_Mul() 
  # pExpr_AssignOp_Div() 
  # pExpr_AssignOp_Concat() 
  # pExpr_AssignOp_Mod() 
  # pExpr_AssignOp_BitwiseAnd() 
  # pExpr_AssignOp_BitwiseOr() 
  # pExpr_AssignOp_BitwiseXor() 
  # pExpr_AssignOp_ShiftLeft() 
  # pExpr_AssignOp_ShiftRight() 
  # pExpr_AssignOp_Pow() 
  # pExpr_BinaryOp_Plus() / Binary expressions
  # pExpr_BinaryOp_Minus() 
  # pExpr_BinaryOp_Mul() 
  # pExpr_BinaryOp_Div() 
  # pExpr_BinaryOp_Concat() 
  # pExpr_BinaryOp_Mod() 
  # pExpr_BinaryOp_BooleanAnd() 
  # pExpr_BinaryOp_BooleanOr() 
  # pExpr_BinaryOp_BitwiseAnd() 
  # pExpr_BinaryOp_BitwiseOr() 
  # pExpr_BinaryOp_BitwiseXor() 
  # pExpr_BinaryOp_ShiftLeft() 
  # pExpr_BinaryOp_ShiftRight() 
  # pExpr_BinaryOp_Pow() 
  # pExpr_BinaryOp_LogicalAnd() 
  # pExpr_BinaryOp_LogicalOr() 
  # pExpr_BinaryOp_LogicalXor() 
  # pExpr_BinaryOp_Equal() 
  # pExpr_BinaryOp_NotEqual() 
  # pExpr_BinaryOp_Identical() 
  # pExpr_BinaryOp_NotIdentical() 
  # pExpr_BinaryOp_Greater() 
  # pExpr_BinaryOp_GreaterOrEqual() 
  # pExpr_BinaryOp_Smaller() 
  # pExpr_BinaryOp_SmallerOrEqual() 
  # pExpr_Instanceof() 
  # pExpr_BooleanNot() / Unary expressions
  # pExpr_BitwiseNot() 
  # pExpr_UnaryMinus() 
  # pExpr_UnaryPlus() 
  # pExpr_PreInc() 
  # pExpr_PreDec() 
  # pExpr_PostInc() 
  # pExpr_PostDec() 
  # pExpr_ErrorSuppress() 
  # pExpr_Cast_Int() / Casts
  # pExpr_Cast_Double() 
  # pExpr_Cast_String() 
  # pExpr_Cast_Array() 
  # pExpr_Cast_Object() 
  # pExpr_Cast_Bool() 
  # pExpr_Cast_Unset() 
  # pExpr_FuncCall() / Function calls and similar constructs
  # pExpr_MethodCall() 
  # pExpr_StaticCall() 
  # pExpr_Empty() 
  # pExpr_Isset() 
  # pExpr_Print() 
  # pExpr_Eval() 
  # pExpr_Include() 
  # pExpr_List() 
  # pExpr_Variable() / Other
  # pExpr_Array() 
  # pExpr_ArrayItem() 
  # pExpr_ArrayDimFetch() 
  # pExpr_ConstFetch() 
  # pExpr_ClassConstFetch() 
  # pExpr_PropertyFetch() 
  # pExpr_StaticPropertyFetch() 
  # pExpr_ShellExec() 
  # pExpr_Closure() 
  # pExpr_ClosureUse() 
  # pExpr_New() 
  # pExpr_Clone() 
  # pExpr_Ternary() 
  # pExpr_Exit() 
  # pExpr_Yield() 
  # pStmt_Use() / Declarations
  # pStmt_UseUse() 
  # pStmt_Interface() 
  # pStmt_Trait() 
  # pStmt_TraitUse() 
  # pStmt_TraitUseAdaptation_Precedence() 
  # pStmt_TraitUseAdaptation_Alias() 
  # pStmt_Property() 
  # pStmt_PropertyProperty() 
  # pStmt_ClassConst() 
  # pStmt_Function() 
  # pStmt_Const() 
  # pStmt_Declare() 
  # pStmt_DeclareDeclare() 
  # pStmt_If() / Control flow
  # pStmt_ElseIf() 
  # pStmt_Else() 
  # pStmt_For() 
  # pStmt_Foreach() 
  # pStmt_While() 
  # pStmt_Do() 
  # pStmt_Switch() 
  # pStmt_Case() 
  # pStmt_TryCatch() 
  # pStmt_Catch() 
  # pStmt_Break() 
  # pStmt_Continue() 
  # pStmt_Return() 
  # pStmt_Throw() 
  # pStmt_Label() 
  # pStmt_Goto() 
  # pStmt_Echo() / Other
  # pStmt_Static() 
  # pStmt_Global() 
  # pStmt_StaticVar() 
  # pStmt_Unset() 
  # pStmt_InlineHTML() 
  # pStmt_HaltCompiler() 
  # pObjectProperty() / Helpers
  # pModifiers() 
  # pEncapsList() 
  # pVarOrNewExpr() 

Xnni\ReflectionBundle\XnniReflectionBundle
  use Symfony\Component\HttpKernel\Bundle\Bundle



